// Generated by CoffeeScript 1.9.3
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

this.block_map_ = (function() {
  function block_map_() {
    this.run = bind(this.run, this);
    var css;
    css = "#google_map{\n	width: 220px;\n	height: 220px;\n	left: 35px;\n	top: 35px;\n	line-height: 0px;\n}\n\n.not_draggable {\n	overflow: hidden;\n	border: 2px solid #F3FFE2;\n	border-radius: 10px;\n	position: relative;\n	float: left;\n	width: 290px;\n	height: 290px;\n	background-color: #1695A3;\n	color: #F3FFE2;\n	text-align: center;\n	vertical-align: center;\n	line-height: 280px;\n	margin: 15px;\n	box-shadow: 0 8px 6px -6px black;\n}\n\n.not_draggable.drop_possible {\n	background-color: #EB7F00;\n}\n\n.not_draggable.drop_over {\n	background-color: #225378;\n}";
    $('<style type="text/css"></style>').html(css).appendTo("head");
    $("<div id='drag5' class='draggable block2'>\n	<div id='google_map'></div>\n</div>").appendTo(".block_bank_wrapper");
    $("#google_map").bind('touchstart mousedown', function() {
      return $("#drag5").removeClass("draggable").addClass("not_draggable");
    });
    $("body").bind('touchend mouseup', function() {
      return $("#drag5").removeClass("not_draggable").addClass("draggable");
    });
    google.maps.event.addDomListener(window, 'load', (function(_this) {
      return function() {
        return navigator.geolocation.getCurrentPosition(function(position) {
          var map_prop;
          _this.my_lat = position.coords.latitude;
          _this.my_lng = position.coords.longitude;
          map_prop = {
            center: new google.maps.LatLng(_this.my_lat, _this.my_lng),
            zoom: 17,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            disableDefaultUI: true,
            minZoom: 17,
            maxZoom: 17
          };
          return _this.map = new google.maps.Map(document.getElementById("google_map"), map_prop);
        });
      };
    })(this));
  }

  block_map_.prototype.run = function(action_callback) {
    var get_rectangle_coords;
    get_rectangle_coords = (function(_this) {
      return function(bounds) {
        var northEast, northEastLat, northEastLng, northWestLat, northWestLng, southEastLat, southEastLng, southWest, southWestLat, southWestLng;
        northEast = bounds.getNorthEast();
        southWest = bounds.getSouthWest();
        southWestLat = southWest.lat();
        southWestLng = southWest.lng();
        northEastLat = northEast.lat();
        northEastLng = northEast.lng();
        southEastLat = northEast.lat();
        southEastLng = southWest.lng();
        northWestLng = northEast.lng();
        northWestLat = southWest.lat();
        return [new google.maps.LatLng(southWestLat, southWestLng), new google.maps.LatLng(northWestLat, northWestLng), new google.maps.LatLng(northEastLat, northEastLng), new google.maps.LatLng(southEastLat, southEastLng)];
      };
    })(this);
    return navigator.geolocation.getCurrentPosition((function(_this) {
      return function(position) {
        var bounds, my_lat_lng, polygon_area, rectangle;
        _this.my_lat = position.coords.latitude;
        _this.my_lng = position.coords.longitude;
        my_lat_lng = new google.maps.LatLng(_this.my_lat, _this.my_lng);
        bounds = _this.map.getBounds();
        rectangle = get_rectangle_coords(bounds);
        polygon_area = new google.maps.Polygon({
          paths: rectangle
        });
        if (google.maps.geometry.poly.containsLocation(my_lat_lng, polygon_area)) {
          action_callback();
          return true;
        } else {
          console.log("Got em in not contains location YEEEAAAAHHHH");
          return false;
        }
      };
    })(this));
  };

  return block_map_;

})();
