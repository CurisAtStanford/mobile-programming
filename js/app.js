// Generated by CoffeeScript 1.9.3
$(function() {
  var c, commands, control, cr, h, items, onScroll, put_text_in_block, startPos, w;
  window.counter = 0;
  window.block_for_loop = new draggable_control_for_loop_();
  window.block_if_then = new draggable_control_if_then_();
  window.block_true = new block_true_();
  window.block_array = new block_array_();
  window.block_instagram = new block_instagram_();
  window.block_camera = new block_camera_();
  window.block_weather = new block_weather_();
  window.block_map = new block_map_();
  window.block_time = new block_time_();
  window.block_ding = new block_ding_();
  window.block_siren = new block_siren_();
  window.block_display_image = new block_display_image_();
  window.block_display_text = new block_display_text_();
  window.block_text_to_speech = new block_text_to_speech_();
  window.block_background_image = new block_background_image_();
  window.block_beyonce = new block_beyonce_();
  window.block_drake = new block_drake_();
  window.block_kimkardashian = new block_kimkardashian_();
  window.block_rihanna = new block_rihanna_();
  window.block_selenagomez = new block_selenagomez_();
  window.block_taylorswift = new block_taylorswift_();
  window.block_pizza = new block_pizza_();
  window.block_donut = new block_donut_();
  window.block_vibrate = new block_vibrate_();
  window.block_background_color = new block_background_color_();
  window.block_block_color = new block_block_color_();
  window.block_27 = new block_place_holder_();
  window.block_28 = new block_place_holder_();
  window.block_29 = new block_place_holder_();
  window.block_30 = new block_place_holder_();
  window.block_31 = new block_place_holder_();
  window.block_32 = new block_place_holder_();
  control = new control_if_then_();
  items = document.querySelectorAll(".drag-wrap");
  h = window.innerHeight;
  w = window.innerWidth;
  c = items[Math.round(items.length / 2)];
  cr = c.getBoundingClientRect();
  onScroll = (function(_this) {
    return function() {
      var i, pos, s2;
      i = 0;
      while (i < items.length) {
        pos = items[i].getBoundingClientRect();
        s2 = (pos.left + pos.width / 2 - (w / 2)) / (w / 1.2);
        s2 = 1 - Math.abs(s2);
        $(items[i]).css({
          '-webkit-transform': "scale(" + s2 + ")"
        });
        ++i;
      }
    };
  })(this);
  onScroll(cr.left - (w / 2) + cr.width / 2, cr.top - (h / 2) + cr.height / 2);
  interact('.drag-zone').draggable({
    inertia: true,
    restrict: {
      restriction: 'body',
      endOnly: true,
      elementRect: {
        left: 0.70,
        right: 0.30
      }
    },
    onstart: function(event) {},
    onmove: (function(_this) {
      return function(event) {
        var $target, x;
        console.log("dragMove GRID");
        $target = $(event.target);
        x = (parseFloat($target.attr('data-x')) || 0) + event.dx;
        $target.css({
          '-webkit-transform': "translate(" + x + "px)"
        });
        $target.attr('data-x', x);
        items = document.querySelectorAll(".drag-wrap");
        return onScroll();
      };
    })(this)
  });
  startPos = null;
  interact('.draggable').draggable({
    inertia: true,
    restrict: {
      restriction: 'body',
      endOnly: true,
      elementRect: {
        top: 0,
        left: 0,
        bottom: 1,
        right: 1
      }
    },
    axis: 'xy',
    snap: {
      targets: [startPos],
      relativePoints: [
        {
          x: 0.5,
          y: 0.5
        }
      ],
      range: 200,
      endOnly: true
    },
    onstart: function(event) {
      var rect;
      rect = interact.getElementRect(event.target);
      startPos = {
        x: rect.left + rect.width / 2,
        y: rect.top + rect.height / 2
      };
      return event.interactable.draggable({
        snap: {
          targets: [startPos],
          range: 200
        }
      });
    },
    onmove: function(event) {
      var $target, x, y;
      $target = $(event.target);
      x = (parseFloat($target.attr('data-x')) || 0) + event.dx;
      y = (parseFloat($target.attr('data-y')) || 0) + event.dy;
      $target.css({
        '-webkit-transform': "translate(" + x + "px, " + y + "px)"
      });
      $target.attr('data-x', x);
      $target.attr('data-y', y);
      return $target.addClass('getting--dragged');
    },
    onend: function(event) {
      var $target;
      $target = $(event.target);
      return $target.removeClass('getting--dragged');
    }
  });
  $("#button_run").click((function(_this) {
    return function() {
      return control.run();
    };
  })(this));
  $("#button_reset").click((function(_this) {
    return function() {
      return location.reload();
    };
  })(this));
  put_text_in_block = function(text, block_name) {
    return $("#" + block_name).val(text);
  };
  commands = {
    'put *text in :block_name block': put_text_in_block,
    'run': control.run
  };
  annyang.addCommands(commands);
  return annyang.start({
    continuous: true
  });

  /*swiper_reg = new Swiper '.swiper-container-reg',
  		pagination: '.swiper-pagination'
  		nextButton: '.swiper-button-next'
  		prevButton: '.swiper-button-prev'
  		effect: 'coverflow'
  		slideActiveClass: 'fake-active-slide'
  		slideNextClass: 'real-active-slide'
  		noSwiping: true
  		noSwipingClass: 'stop-swiping'
  		slidesPerView: 3
  		spaceBetween: 30
  		speed: 800
  		loop: true
  		coverflow:
  			rotate: 50
  			stretch: 0
  			depth: 100
  			modifier: 1
  			slideShadows : false
  
  	swiper_ver = new Swiper '.swiper-container-ver',
  		noSwiping: true
  		noSwipingClass: 'stop-swiping'
  		effect: 'coverflow'
  		slidesPerView: 1
  		spaceBetween: 30
  		loop: true
  		direction: 'vertical'
  		speed: 800
  		coverflow:
  			rotate: 50
  			stretch: 0
  			depth: 100
  			modifier: 1
  			slideShadows : false
  
  	swiper_hor = new Swiper '.swiper-container-hor',
  		effect: 'coverflow'
  		noSwiping: true
  		noSwipingClass: 'stop-swiping'
  		slidesPerView: 1
  		spaceBetween: 30
  		speed: 800
  		loop: true
  		coverflow:
  			rotate: 50
  			stretch: 0
  			depth: 100
  			modifier: 1
  			slideShadows : false
  
  	interact(".swiper-button-next").on 'tap', ->
  		swiper_reg.slideNext()
  		swiper_ver.slideNext()
  		swiper_hor.slideNext()
  		console.log "BOOM"
  
  	interact(".swiper-button-prev").on 'tap', ->
  		swiper_reg.slidePrev()
  		swiper_ver.slidePrev()
  		swiper_hor.slidePrev()
  		console.log "BAM"
   */
});
