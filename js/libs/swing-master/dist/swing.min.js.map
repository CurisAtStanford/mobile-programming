{"version":3,"sources":["swing.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","global","Stack","Card","gajus","Swing","this","self","window","./card.js","./stack.js",2,"drainQueue","draining","currentQueue","len","queue","noop","process","nextTick","fun","push","setTimeout","title","browser","env","argv","version","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","umask",3,"document","exportName","undefined","setTimeoutContext","fn","timeout","context","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","forEach","hasOwnProperty","extend","dest","src","merge","keys","Object","inherit","child","base","properties","childP","baseP","prototype","create","constructor","_super","apply","arguments","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","target","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","Input","manager","callback","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","scale","getScale","rotation","getRotation","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","x","y","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","getVelocity","abs","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","Math","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","allow","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","TouchAction","value","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","id","defaults","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","touchAction","toggleCssProps","item","add","recognizeWith","requireFailure","cssProps","name","style","triggerDomEvent","event","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","Date","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM",4,5,"MSPointerEvent","removePointer","eventTypeNormalized","toLowerCase","replace","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","index","hasRequireFailures","canRecognizeWith","withState","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","remove","events","Tap","Pan","Swipe","Pinch","Rotate","Press","define","amd","removeFirst","array","idx","rebound","util","bind","func","source","SpringSystem","looper","_springRegistry","_activeSprings","listeners","_idleSpringIndices","AnimationLooper","springSystem","_isIdle","_lastTimeMillis","setLooper","createSpring","tension","friction","spring","Spring","registerSpring","setSpringConfig","SpringConfig","DEFAULT_ORIGAMI_SPRING_CONFIG","springConfig","fromOrigamiTensionAndFriction","getIsIdle","getSpringById","getAllSprings","vals","getId","deregisterSpring","advance","pop","systemShouldAdvance","loop","currentTimeMillis","listener","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","run","activateSpring","springId","_id","_ID","_springSystem","_currentState","PhysicsState","_previousState","_tempState","MAX_DELTA_TIME_SEC","SOLVER_TIMESTEP_SEC","_springConfig","_overshootClampingEnabled","_startValue","_endValue","_wasAtRest","_restSpeedThreshold","_displacementFromRestThreshold","_timeAccumulator","frames","getSpringConfig","setCurrentValue","currentValue","skipSetAtRest","position","setAtRest","notifyPositionUpdated","getStartValue","getCurrentValue","getCurrentDisplacementDistance","getDisplacementDistanceForState","setEndValue","endValue","isAtRest","onSpringEndStateChange","getEndValue","setVelocity","setRestSpeedThreshold","restSpeedThreshold","getRestSpeedThreshold","setRestDisplacementThreshold","displacementFromRestThreshold","getRestDisplacementThreshold","setOvershootClampingEnabled","enabled","isOvershootClampingEnabled","isOvershooting","realDeltaTime","adjustedDeltaTime","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dAcceleration","dxdt","dvdt","tempPosition","tempVelocity","interpolate","notifyActivate","notifyAtRest","onSpringActivate","onSpringUpdate","onSpringAtRest","wasAtRest","alpha","getListeners","newListener","listenerToRemove","currentValueIsApproximately","_this","_run","onFrame","OrigamiValueConverter","SimulationLooper","timestep","running","SteppingSimulationLooper","step","tensionFromOrigamiValue","oValue","origamiValueFromTension","frictionFromOrigamiValue","origamiFromFriction","coastingConfigWithOrigamiFriction","colorCache","hexToRGB","color","parts","match","parseInt","g","rgbToHex","toString","MathUtil","mapValueInRange","fromLow","fromHigh","toLow","toHigh","fromRangeSize","toRangeSize","valueScale","interpolateColor","startColor","endColor","asRGB","floor","degreesToRadians","deg","radiansToDegrees","rad","_onFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","setImmediate","_process","Sister","sister","unshift","trigger",6,"memo","capitalizedKey","prefixes","capitalize","charAt","dashedPrefix","prefixedKey","upper","hasPrefix","dash",7,"_isTouchDevice","vendorPrefix","dom","randomInt","min","max","random","stack","targetElement","card","config","eventEmitter","springThrowIn","springThrowOut","lastThrow","lastTranslate","throwOutDistance","throwWhere","mc","minThrowOutDistance","maxThrowOutDistance","appendToParent","maxRotation","transform","throwOutConfidence","throwDirection","isThrowOut","throwOut","throwIn","dragging","fromX","fromY","_trigger","THROW_IN","THROW_OUT","_destroyCard","where","siblings","elementChildren","targetIndex","removeChild","appendChild","offsetWidth","horizontalOffset","verticalOffset","msMaxTouchPoints","./dom.js","hammerjs","vendor-prefix",8,"childNodes","children","nodeType",9,"eventName","createCard","getCard","j"],"mappings":"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","file":"swing.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n'use strict';\n\nvar Stack = require('./stack.js'),\n    Card = require('./card.js');\n\nglobal.gajus = global.gajus || {};\n\nglobal.gajus.Swing = {\n    Stack: Stack,\n    Card: Card\n};\n\nmodule.exports = {\n    Stack: Stack,\n    Card: Card\n};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./card.js\":7,\"./stack.js\":9}],2:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    draining = true;\n    var currentQueue;\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        var i = -1;\n        while (++i < len) {\n            currentQueue[i]();\n        }\n        len = queue.length;\n    }\n    draining = false;\n}\nprocess.nextTick = function (fun) {\n    queue.push(fun);\n    if (!draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],3:[function(require,module,exports){\n/*! Hammer.JS - v2.0.4 - 2014-09-28\r\n * http://hammerjs.github.io/\r\n *\r\n * Copyright (c) 2014 Jorik Tangelder;\r\n * Licensed under the MIT license */\r\n(function(window, document, exportName, undefined) {\r\n  'use strict';\r\n\r\nvar VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];\r\nvar TEST_ELEMENT = document.createElement('div');\r\n\r\nvar TYPE_FUNCTION = 'function';\r\n\r\nvar round = Math.round;\r\nvar abs = Math.abs;\r\nvar now = Date.now;\r\n\r\n/**\r\n * set a timeout with a given scope\r\n * @param {Function} fn\r\n * @param {Number} timeout\r\n * @param {Object} context\r\n * @returns {number}\r\n */\r\nfunction setTimeoutContext(fn, timeout, context) {\r\n    return setTimeout(bindFn(fn, context), timeout);\r\n}\r\n\r\n/**\r\n * if the argument is an array, we want to execute the fn on each entry\r\n * if it aint an array we don't want to do a thing.\r\n * this is used by all the methods that accept a single and array argument.\r\n * @param {*|Array} arg\r\n * @param {String} fn\r\n * @param {Object} [context]\r\n * @returns {Boolean}\r\n */\r\nfunction invokeArrayArg(arg, fn, context) {\r\n    if (Array.isArray(arg)) {\r\n        each(arg, context[fn], context);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * walk objects and arrays\r\n * @param {Object} obj\r\n * @param {Function} iterator\r\n * @param {Object} context\r\n */\r\nfunction each(obj, iterator, context) {\r\n    var i;\r\n\r\n    if (!obj) {\r\n        return;\r\n    }\r\n\r\n    if (obj.forEach) {\r\n        obj.forEach(iterator, context);\r\n    } else if (obj.length !== undefined) {\r\n        i = 0;\r\n        while (i < obj.length) {\r\n            iterator.call(context, obj[i], i, obj);\r\n            i++;\r\n        }\r\n    } else {\r\n        for (i in obj) {\r\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * extend object.\r\n * means that properties in dest will be overwritten by the ones in src.\r\n * @param {Object} dest\r\n * @param {Object} src\r\n * @param {Boolean} [merge]\r\n * @returns {Object} dest\r\n */\r\nfunction extend(dest, src, merge) {\r\n    var keys = Object.keys(src);\r\n    var i = 0;\r\n    while (i < keys.length) {\r\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\r\n            dest[keys[i]] = src[keys[i]];\r\n        }\r\n        i++;\r\n    }\r\n    return dest;\r\n}\r\n\r\n/**\r\n * merge the values from src in the dest.\r\n * means that properties that exist in dest will not be overwritten by src\r\n * @param {Object} dest\r\n * @param {Object} src\r\n * @returns {Object} dest\r\n */\r\nfunction merge(dest, src) {\r\n    return extend(dest, src, true);\r\n}\r\n\r\n/**\r\n * simple class inheritance\r\n * @param {Function} child\r\n * @param {Function} base\r\n * @param {Object} [properties]\r\n */\r\nfunction inherit(child, base, properties) {\r\n    var baseP = base.prototype,\r\n        childP;\r\n\r\n    childP = child.prototype = Object.create(baseP);\r\n    childP.constructor = child;\r\n    childP._super = baseP;\r\n\r\n    if (properties) {\r\n        extend(childP, properties);\r\n    }\r\n}\r\n\r\n/**\r\n * simple function bind\r\n * @param {Function} fn\r\n * @param {Object} context\r\n * @returns {Function}\r\n */\r\nfunction bindFn(fn, context) {\r\n    return function boundFn() {\r\n        return fn.apply(context, arguments);\r\n    };\r\n}\r\n\r\n/**\r\n * let a boolean value also be a function that must return a boolean\r\n * this first item in args will be used as the context\r\n * @param {Boolean|Function} val\r\n * @param {Array} [args]\r\n * @returns {Boolean}\r\n */\r\nfunction boolOrFn(val, args) {\r\n    if (typeof val == TYPE_FUNCTION) {\r\n        return val.apply(args ? args[0] || undefined : undefined, args);\r\n    }\r\n    return val;\r\n}\r\n\r\n/**\r\n * use the val2 when val1 is undefined\r\n * @param {*} val1\r\n * @param {*} val2\r\n * @returns {*}\r\n */\r\nfunction ifUndefined(val1, val2) {\r\n    return (val1 === undefined) ? val2 : val1;\r\n}\r\n\r\n/**\r\n * addEventListener with multiple events at once\r\n * @param {EventTarget} target\r\n * @param {String} types\r\n * @param {Function} handler\r\n */\r\nfunction addEventListeners(target, types, handler) {\r\n    each(splitStr(types), function(type) {\r\n        target.addEventListener(type, handler, false);\r\n    });\r\n}\r\n\r\n/**\r\n * removeEventListener with multiple events at once\r\n * @param {EventTarget} target\r\n * @param {String} types\r\n * @param {Function} handler\r\n */\r\nfunction removeEventListeners(target, types, handler) {\r\n    each(splitStr(types), function(type) {\r\n        target.removeEventListener(type, handler, false);\r\n    });\r\n}\r\n\r\n/**\r\n * find if a node is in the given parent\r\n * @method hasParent\r\n * @param {HTMLElement} node\r\n * @param {HTMLElement} parent\r\n * @return {Boolean} found\r\n */\r\nfunction hasParent(node, parent) {\r\n    while (node) {\r\n        if (node == parent) {\r\n            return true;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * small indexOf wrapper\r\n * @param {String} str\r\n * @param {String} find\r\n * @returns {Boolean} found\r\n */\r\nfunction inStr(str, find) {\r\n    return str.indexOf(find) > -1;\r\n}\r\n\r\n/**\r\n * split string on whitespace\r\n * @param {String} str\r\n * @returns {Array} words\r\n */\r\nfunction splitStr(str) {\r\n    return str.trim().split(/\\s+/g);\r\n}\r\n\r\n/**\r\n * find if a array contains the object using indexOf or a simple polyFill\r\n * @param {Array} src\r\n * @param {String} find\r\n * @param {String} [findByKey]\r\n * @return {Boolean|Number} false when not found, or the index\r\n */\r\nfunction inArray(src, find, findByKey) {\r\n    if (src.indexOf && !findByKey) {\r\n        return src.indexOf(find);\r\n    } else {\r\n        var i = 0;\r\n        while (i < src.length) {\r\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\r\n                return i;\r\n            }\r\n            i++;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\n/**\r\n * convert array-like objects to real arrays\r\n * @param {Object} obj\r\n * @returns {Array}\r\n */\r\nfunction toArray(obj) {\r\n    return Array.prototype.slice.call(obj, 0);\r\n}\r\n\r\n/**\r\n * unique array with objects based on a key (like 'id') or just by the array's value\r\n * @param {Array} src [{id:1},{id:2},{id:1}]\r\n * @param {String} [key]\r\n * @param {Boolean} [sort=False]\r\n * @returns {Array} [{id:1},{id:2}]\r\n */\r\nfunction uniqueArray(src, key, sort) {\r\n    var results = [];\r\n    var values = [];\r\n    var i = 0;\r\n\r\n    while (i < src.length) {\r\n        var val = key ? src[i][key] : src[i];\r\n        if (inArray(values, val) < 0) {\r\n            results.push(src[i]);\r\n        }\r\n        values[i] = val;\r\n        i++;\r\n    }\r\n\r\n    if (sort) {\r\n        if (!key) {\r\n            results = results.sort();\r\n        } else {\r\n            results = results.sort(function sortUniqueArray(a, b) {\r\n                return a[key] > b[key];\r\n            });\r\n        }\r\n    }\r\n\r\n    return results;\r\n}\r\n\r\n/**\r\n * get the prefixed property\r\n * @param {Object} obj\r\n * @param {String} property\r\n * @returns {String|Undefined} prefixed\r\n */\r\nfunction prefixed(obj, property) {\r\n    var prefix, prop;\r\n    var camelProp = property[0].toUpperCase() + property.slice(1);\r\n\r\n    var i = 0;\r\n    while (i < VENDOR_PREFIXES.length) {\r\n        prefix = VENDOR_PREFIXES[i];\r\n        prop = (prefix) ? prefix + camelProp : property;\r\n\r\n        if (prop in obj) {\r\n            return prop;\r\n        }\r\n        i++;\r\n    }\r\n    return undefined;\r\n}\r\n\r\n/**\r\n * get a unique id\r\n * @returns {number} uniqueId\r\n */\r\nvar _uniqueId = 1;\r\nfunction uniqueId() {\r\n    return _uniqueId++;\r\n}\r\n\r\n/**\r\n * get the window object of an element\r\n * @param {HTMLElement} element\r\n * @returns {DocumentView|Window}\r\n */\r\nfunction getWindowForElement(element) {\r\n    var doc = element.ownerDocument;\r\n    return (doc.defaultView || doc.parentWindow);\r\n}\r\n\r\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\r\n\r\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\r\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\r\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\r\n\r\nvar INPUT_TYPE_TOUCH = 'touch';\r\nvar INPUT_TYPE_PEN = 'pen';\r\nvar INPUT_TYPE_MOUSE = 'mouse';\r\nvar INPUT_TYPE_KINECT = 'kinect';\r\n\r\nvar COMPUTE_INTERVAL = 25;\r\n\r\nvar INPUT_START = 1;\r\nvar INPUT_MOVE = 2;\r\nvar INPUT_END = 4;\r\nvar INPUT_CANCEL = 8;\r\n\r\nvar DIRECTION_NONE = 1;\r\nvar DIRECTION_LEFT = 2;\r\nvar DIRECTION_RIGHT = 4;\r\nvar DIRECTION_UP = 8;\r\nvar DIRECTION_DOWN = 16;\r\n\r\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\r\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\r\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\r\n\r\nvar PROPS_XY = ['x', 'y'];\r\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\r\n\r\n/**\r\n * create new input type manager\r\n * @param {Manager} manager\r\n * @param {Function} callback\r\n * @returns {Input}\r\n * @constructor\r\n */\r\nfunction Input(manager, callback) {\r\n    var self = this;\r\n    this.manager = manager;\r\n    this.callback = callback;\r\n    this.element = manager.element;\r\n    this.target = manager.options.inputTarget;\r\n\r\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\r\n    // so when disabled the input events are completely bypassed.\r\n    this.domHandler = function(ev) {\r\n        if (boolOrFn(manager.options.enable, [manager])) {\r\n            self.handler(ev);\r\n        }\r\n    };\r\n\r\n    this.init();\r\n\r\n}\r\n\r\nInput.prototype = {\r\n    /**\r\n     * should handle the inputEvent data and trigger the callback\r\n     * @virtual\r\n     */\r\n    handler: function() { },\r\n\r\n    /**\r\n     * bind the events\r\n     */\r\n    init: function() {\r\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\r\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\r\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\r\n    },\r\n\r\n    /**\r\n     * unbind the events\r\n     */\r\n    destroy: function() {\r\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\r\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\r\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\r\n    }\r\n};\r\n\r\n/**\r\n * create new input type manager\r\n * called by the Manager constructor\r\n * @param {Hammer} manager\r\n * @returns {Input}\r\n */\r\nfunction createInputInstance(manager) {\r\n    var Type;\r\n    var inputClass = manager.options.inputClass;\r\n\r\n    if (inputClass) {\r\n        Type = inputClass;\r\n    } else if (SUPPORT_POINTER_EVENTS) {\r\n        Type = PointerEventInput;\r\n    } else if (SUPPORT_ONLY_TOUCH) {\r\n        Type = TouchInput;\r\n    } else if (!SUPPORT_TOUCH) {\r\n        Type = MouseInput;\r\n    } else {\r\n        Type = TouchMouseInput;\r\n    }\r\n    return new (Type)(manager, inputHandler);\r\n}\r\n\r\n/**\r\n * handle input events\r\n * @param {Manager} manager\r\n * @param {String} eventType\r\n * @param {Object} input\r\n */\r\nfunction inputHandler(manager, eventType, input) {\r\n    var pointersLen = input.pointers.length;\r\n    var changedPointersLen = input.changedPointers.length;\r\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\r\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\r\n\r\n    input.isFirst = !!isFirst;\r\n    input.isFinal = !!isFinal;\r\n\r\n    if (isFirst) {\r\n        manager.session = {};\r\n    }\r\n\r\n    // source event is the normalized value of the domEvents\r\n    // like 'touchstart, mouseup, pointerdown'\r\n    input.eventType = eventType;\r\n\r\n    // compute scale, rotation etc\r\n    computeInputData(manager, input);\r\n\r\n    // emit secret event\r\n    manager.emit('hammer.input', input);\r\n\r\n    manager.recognize(input);\r\n    manager.session.prevInput = input;\r\n}\r\n\r\n/**\r\n * extend the data with some usable properties like scale, rotate, velocity etc\r\n * @param {Object} manager\r\n * @param {Object} input\r\n */\r\nfunction computeInputData(manager, input) {\r\n    var session = manager.session;\r\n    var pointers = input.pointers;\r\n    var pointersLength = pointers.length;\r\n\r\n    // store the first input to calculate the distance and direction\r\n    if (!session.firstInput) {\r\n        session.firstInput = simpleCloneInputData(input);\r\n    }\r\n\r\n    // to compute scale and rotation we need to store the multiple touches\r\n    if (pointersLength > 1 && !session.firstMultiple) {\r\n        session.firstMultiple = simpleCloneInputData(input);\r\n    } else if (pointersLength === 1) {\r\n        session.firstMultiple = false;\r\n    }\r\n\r\n    var firstInput = session.firstInput;\r\n    var firstMultiple = session.firstMultiple;\r\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\r\n\r\n    var center = input.center = getCenter(pointers);\r\n    input.timeStamp = now();\r\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\r\n\r\n    input.angle = getAngle(offsetCenter, center);\r\n    input.distance = getDistance(offsetCenter, center);\r\n\r\n    computeDeltaXY(session, input);\r\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\r\n\r\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\r\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\r\n\r\n    computeIntervalInputData(session, input);\r\n\r\n    // find the correct target\r\n    var target = manager.element;\r\n    if (hasParent(input.srcEvent.target, target)) {\r\n        target = input.srcEvent.target;\r\n    }\r\n    input.target = target;\r\n}\r\n\r\nfunction computeDeltaXY(session, input) {\r\n    var center = input.center;\r\n    var offset = session.offsetDelta || {};\r\n    var prevDelta = session.prevDelta || {};\r\n    var prevInput = session.prevInput || {};\r\n\r\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\r\n        prevDelta = session.prevDelta = {\r\n            x: prevInput.deltaX || 0,\r\n            y: prevInput.deltaY || 0\r\n        };\r\n\r\n        offset = session.offsetDelta = {\r\n            x: center.x,\r\n            y: center.y\r\n        };\r\n    }\r\n\r\n    input.deltaX = prevDelta.x + (center.x - offset.x);\r\n    input.deltaY = prevDelta.y + (center.y - offset.y);\r\n}\r\n\r\n/**\r\n * velocity is calculated every x ms\r\n * @param {Object} session\r\n * @param {Object} input\r\n */\r\nfunction computeIntervalInputData(session, input) {\r\n    var last = session.lastInterval || input,\r\n        deltaTime = input.timeStamp - last.timeStamp,\r\n        velocity, velocityX, velocityY, direction;\r\n\r\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\r\n        var deltaX = last.deltaX - input.deltaX;\r\n        var deltaY = last.deltaY - input.deltaY;\r\n\r\n        var v = getVelocity(deltaTime, deltaX, deltaY);\r\n        velocityX = v.x;\r\n        velocityY = v.y;\r\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\r\n        direction = getDirection(deltaX, deltaY);\r\n\r\n        session.lastInterval = input;\r\n    } else {\r\n        // use latest velocity info if it doesn't overtake a minimum period\r\n        velocity = last.velocity;\r\n        velocityX = last.velocityX;\r\n        velocityY = last.velocityY;\r\n        direction = last.direction;\r\n    }\r\n\r\n    input.velocity = velocity;\r\n    input.velocityX = velocityX;\r\n    input.velocityY = velocityY;\r\n    input.direction = direction;\r\n}\r\n\r\n/**\r\n * create a simple clone from the input used for storage of firstInput and firstMultiple\r\n * @param {Object} input\r\n * @returns {Object} clonedInputData\r\n */\r\nfunction simpleCloneInputData(input) {\r\n    // make a simple copy of the pointers because we will get a reference if we don't\r\n    // we only need clientXY for the calculations\r\n    var pointers = [];\r\n    var i = 0;\r\n    while (i < input.pointers.length) {\r\n        pointers[i] = {\r\n            clientX: round(input.pointers[i].clientX),\r\n            clientY: round(input.pointers[i].clientY)\r\n        };\r\n        i++;\r\n    }\r\n\r\n    return {\r\n        timeStamp: now(),\r\n        pointers: pointers,\r\n        center: getCenter(pointers),\r\n        deltaX: input.deltaX,\r\n        deltaY: input.deltaY\r\n    };\r\n}\r\n\r\n/**\r\n * get the center of all the pointers\r\n * @param {Array} pointers\r\n * @return {Object} center contains `x` and `y` properties\r\n */\r\nfunction getCenter(pointers) {\r\n    var pointersLength = pointers.length;\r\n\r\n    // no need to loop when only one touch\r\n    if (pointersLength === 1) {\r\n        return {\r\n            x: round(pointers[0].clientX),\r\n            y: round(pointers[0].clientY)\r\n        };\r\n    }\r\n\r\n    var x = 0, y = 0, i = 0;\r\n    while (i < pointersLength) {\r\n        x += pointers[i].clientX;\r\n        y += pointers[i].clientY;\r\n        i++;\r\n    }\r\n\r\n    return {\r\n        x: round(x / pointersLength),\r\n        y: round(y / pointersLength)\r\n    };\r\n}\r\n\r\n/**\r\n * calculate the velocity between two points. unit is in px per ms.\r\n * @param {Number} deltaTime\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @return {Object} velocity `x` and `y`\r\n */\r\nfunction getVelocity(deltaTime, x, y) {\r\n    return {\r\n        x: x / deltaTime || 0,\r\n        y: y / deltaTime || 0\r\n    };\r\n}\r\n\r\n/**\r\n * get the direction between two points\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @return {Number} direction\r\n */\r\nfunction getDirection(x, y) {\r\n    if (x === y) {\r\n        return DIRECTION_NONE;\r\n    }\r\n\r\n    if (abs(x) >= abs(y)) {\r\n        return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n    }\r\n    return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;\r\n}\r\n\r\n/**\r\n * calculate the absolute distance between two points\r\n * @param {Object} p1 {x, y}\r\n * @param {Object} p2 {x, y}\r\n * @param {Array} [props] containing x and y keys\r\n * @return {Number} distance\r\n */\r\nfunction getDistance(p1, p2, props) {\r\n    if (!props) {\r\n        props = PROPS_XY;\r\n    }\r\n    var x = p2[props[0]] - p1[props[0]],\r\n        y = p2[props[1]] - p1[props[1]];\r\n\r\n    return Math.sqrt((x * x) + (y * y));\r\n}\r\n\r\n/**\r\n * calculate the angle between two coordinates\r\n * @param {Object} p1\r\n * @param {Object} p2\r\n * @param {Array} [props] containing x and y keys\r\n * @return {Number} angle\r\n */\r\nfunction getAngle(p1, p2, props) {\r\n    if (!props) {\r\n        props = PROPS_XY;\r\n    }\r\n    var x = p2[props[0]] - p1[props[0]],\r\n        y = p2[props[1]] - p1[props[1]];\r\n    return Math.atan2(y, x) * 180 / Math.PI;\r\n}\r\n\r\n/**\r\n * calculate the rotation degrees between two pointersets\r\n * @param {Array} start array of pointers\r\n * @param {Array} end array of pointers\r\n * @return {Number} rotation\r\n */\r\nfunction getRotation(start, end) {\r\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[1], start[0], PROPS_CLIENT_XY);\r\n}\r\n\r\n/**\r\n * calculate the scale factor between two pointersets\r\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\r\n * @param {Array} start array of pointers\r\n * @param {Array} end array of pointers\r\n * @return {Number} scale\r\n */\r\nfunction getScale(start, end) {\r\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\r\n}\r\n\r\nvar MOUSE_INPUT_MAP = {\r\n    mousedown: INPUT_START,\r\n    mousemove: INPUT_MOVE,\r\n    mouseup: INPUT_END\r\n};\r\n\r\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\r\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\r\n\r\n/**\r\n * Mouse events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction MouseInput() {\r\n    this.evEl = MOUSE_ELEMENT_EVENTS;\r\n    this.evWin = MOUSE_WINDOW_EVENTS;\r\n\r\n    this.allow = true; // used by Input.TouchMouse to disable mouse events\r\n    this.pressed = false; // mousedown state\r\n\r\n    Input.apply(this, arguments);\r\n}\r\n\r\ninherit(MouseInput, Input, {\r\n    /**\r\n     * handle mouse events\r\n     * @param {Object} ev\r\n     */\r\n    handler: function MEhandler(ev) {\r\n        var eventType = MOUSE_INPUT_MAP[ev.type];\r\n\r\n        // on start we want to have the left mouse button down\r\n        if (eventType & INPUT_START && ev.button === 0) {\r\n            this.pressed = true;\r\n        }\r\n\r\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\r\n            eventType = INPUT_END;\r\n        }\r\n\r\n        // mouse must be down, and mouse events are allowed (see the TouchMouse input)\r\n        if (!this.pressed || !this.allow) {\r\n            return;\r\n        }\r\n\r\n        if (eventType & INPUT_END) {\r\n            this.pressed = false;\r\n        }\r\n\r\n        this.callback(this.manager, eventType, {\r\n            pointers: [ev],\r\n            changedPointers: [ev],\r\n            pointerType: INPUT_TYPE_MOUSE,\r\n            srcEvent: ev\r\n        });\r\n    }\r\n});\r\n\r\nvar POINTER_INPUT_MAP = {\r\n    pointerdown: INPUT_START,\r\n    pointermove: INPUT_MOVE,\r\n    pointerup: INPUT_END,\r\n    pointercancel: INPUT_CANCEL,\r\n    pointerout: INPUT_CANCEL\r\n};\r\n\r\n// in IE10 the pointer types is defined as an enum\r\nvar IE10_POINTER_TYPE_ENUM = {\r\n    2: INPUT_TYPE_TOUCH,\r\n    3: INPUT_TYPE_PEN,\r\n    4: INPUT_TYPE_MOUSE,\r\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\r\n};\r\n\r\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\r\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\r\n\r\n// IE10 has prefixed support, and case-sensitive\r\nif (window.MSPointerEvent) {\r\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\r\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\r\n}\r\n\r\n/**\r\n * Pointer events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction PointerEventInput() {\r\n    this.evEl = POINTER_ELEMENT_EVENTS;\r\n    this.evWin = POINTER_WINDOW_EVENTS;\r\n\r\n    Input.apply(this, arguments);\r\n\r\n    this.store = (this.manager.session.pointerEvents = []);\r\n}\r\n\r\ninherit(PointerEventInput, Input, {\r\n    /**\r\n     * handle mouse events\r\n     * @param {Object} ev\r\n     */\r\n    handler: function PEhandler(ev) {\r\n        var store = this.store;\r\n        var removePointer = false;\r\n\r\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\r\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\r\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\r\n\r\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\r\n\r\n        // get index of the event in the store\r\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\r\n\r\n        // start and mouse must be down\r\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\r\n            if (storeIndex < 0) {\r\n                store.push(ev);\r\n                storeIndex = store.length - 1;\r\n            }\r\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\r\n            removePointer = true;\r\n        }\r\n\r\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\r\n        if (storeIndex < 0) {\r\n            return;\r\n        }\r\n\r\n        // update the event in the store\r\n        store[storeIndex] = ev;\r\n\r\n        this.callback(this.manager, eventType, {\r\n            pointers: store,\r\n            changedPointers: [ev],\r\n            pointerType: pointerType,\r\n            srcEvent: ev\r\n        });\r\n\r\n        if (removePointer) {\r\n            // remove from the store\r\n            store.splice(storeIndex, 1);\r\n        }\r\n    }\r\n});\r\n\r\nvar SINGLE_TOUCH_INPUT_MAP = {\r\n    touchstart: INPUT_START,\r\n    touchmove: INPUT_MOVE,\r\n    touchend: INPUT_END,\r\n    touchcancel: INPUT_CANCEL\r\n};\r\n\r\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\r\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n/**\r\n * Touch events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction SingleTouchInput() {\r\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\r\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\r\n    this.started = false;\r\n\r\n    Input.apply(this, arguments);\r\n}\r\n\r\ninherit(SingleTouchInput, Input, {\r\n    handler: function TEhandler(ev) {\r\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\r\n\r\n        // should we handle the touch events?\r\n        if (type === INPUT_START) {\r\n            this.started = true;\r\n        }\r\n\r\n        if (!this.started) {\r\n            return;\r\n        }\r\n\r\n        var touches = normalizeSingleTouches.call(this, ev, type);\r\n\r\n        // when done, reset the started state\r\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\r\n            this.started = false;\r\n        }\r\n\r\n        this.callback(this.manager, type, {\r\n            pointers: touches[0],\r\n            changedPointers: touches[1],\r\n            pointerType: INPUT_TYPE_TOUCH,\r\n            srcEvent: ev\r\n        });\r\n    }\r\n});\r\n\r\n/**\r\n * @this {TouchInput}\r\n * @param {Object} ev\r\n * @param {Number} type flag\r\n * @returns {undefined|Array} [all, changed]\r\n */\r\nfunction normalizeSingleTouches(ev, type) {\r\n    var all = toArray(ev.touches);\r\n    var changed = toArray(ev.changedTouches);\r\n\r\n    if (type & (INPUT_END | INPUT_CANCEL)) {\r\n        all = uniqueArray(all.concat(changed), 'identifier', true);\r\n    }\r\n\r\n    return [all, changed];\r\n}\r\n\r\nvar TOUCH_INPUT_MAP = {\r\n    touchstart: INPUT_START,\r\n    touchmove: INPUT_MOVE,\r\n    touchend: INPUT_END,\r\n    touchcancel: INPUT_CANCEL\r\n};\r\n\r\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\r\n\r\n/**\r\n * Multi-user touch events input\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction TouchInput() {\r\n    this.evTarget = TOUCH_TARGET_EVENTS;\r\n    this.targetIds = {};\r\n\r\n    Input.apply(this, arguments);\r\n}\r\n\r\ninherit(TouchInput, Input, {\r\n    handler: function MTEhandler(ev) {\r\n        var type = TOUCH_INPUT_MAP[ev.type];\r\n        var touches = getTouches.call(this, ev, type);\r\n        if (!touches) {\r\n            return;\r\n        }\r\n\r\n        this.callback(this.manager, type, {\r\n            pointers: touches[0],\r\n            changedPointers: touches[1],\r\n            pointerType: INPUT_TYPE_TOUCH,\r\n            srcEvent: ev\r\n        });\r\n    }\r\n});\r\n\r\n/**\r\n * @this {TouchInput}\r\n * @param {Object} ev\r\n * @param {Number} type flag\r\n * @returns {undefined|Array} [all, changed]\r\n */\r\nfunction getTouches(ev, type) {\r\n    var allTouches = toArray(ev.touches);\r\n    var targetIds = this.targetIds;\r\n\r\n    // when there is only one touch, the process can be simplified\r\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\r\n        targetIds[allTouches[0].identifier] = true;\r\n        return [allTouches, allTouches];\r\n    }\r\n\r\n    var i,\r\n        targetTouches,\r\n        changedTouches = toArray(ev.changedTouches),\r\n        changedTargetTouches = [],\r\n        target = this.target;\r\n\r\n    // get target touches from touches\r\n    targetTouches = allTouches.filter(function(touch) {\r\n        return hasParent(touch.target, target);\r\n    });\r\n\r\n    // collect touches\r\n    if (type === INPUT_START) {\r\n        i = 0;\r\n        while (i < targetTouches.length) {\r\n            targetIds[targetTouches[i].identifier] = true;\r\n            i++;\r\n        }\r\n    }\r\n\r\n    // filter changed touches to only contain touches that exist in the collected target ids\r\n    i = 0;\r\n    while (i < changedTouches.length) {\r\n        if (targetIds[changedTouches[i].identifier]) {\r\n            changedTargetTouches.push(changedTouches[i]);\r\n        }\r\n\r\n        // cleanup removed touches\r\n        if (type & (INPUT_END | INPUT_CANCEL)) {\r\n            delete targetIds[changedTouches[i].identifier];\r\n        }\r\n        i++;\r\n    }\r\n\r\n    if (!changedTargetTouches.length) {\r\n        return;\r\n    }\r\n\r\n    return [\r\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\r\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\r\n        changedTargetTouches\r\n    ];\r\n}\r\n\r\n/**\r\n * Combined touch and mouse input\r\n *\r\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\r\n * This because touch devices also emit mouse events while doing a touch.\r\n *\r\n * @constructor\r\n * @extends Input\r\n */\r\nfunction TouchMouseInput() {\r\n    Input.apply(this, arguments);\r\n\r\n    var handler = bindFn(this.handler, this);\r\n    this.touch = new TouchInput(this.manager, handler);\r\n    this.mouse = new MouseInput(this.manager, handler);\r\n}\r\n\r\ninherit(TouchMouseInput, Input, {\r\n    /**\r\n     * handle mouse and touch events\r\n     * @param {Hammer} manager\r\n     * @param {String} inputEvent\r\n     * @param {Object} inputData\r\n     */\r\n    handler: function TMEhandler(manager, inputEvent, inputData) {\r\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\r\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\r\n\r\n        // when we're in a touch event, so  block all upcoming mouse events\r\n        // most mobile browser also emit mouseevents, right after touchstart\r\n        if (isTouch) {\r\n            this.mouse.allow = false;\r\n        } else if (isMouse && !this.mouse.allow) {\r\n            return;\r\n        }\r\n\r\n        // reset the allowMouse when we're done\r\n        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\r\n            this.mouse.allow = true;\r\n        }\r\n\r\n        this.callback(manager, inputEvent, inputData);\r\n    },\r\n\r\n    /**\r\n     * remove the event listeners\r\n     */\r\n    destroy: function destroy() {\r\n        this.touch.destroy();\r\n        this.mouse.destroy();\r\n    }\r\n});\r\n\r\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\r\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\r\n\r\n// magical touchAction value\r\nvar TOUCH_ACTION_COMPUTE = 'compute';\r\nvar TOUCH_ACTION_AUTO = 'auto';\r\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\r\nvar TOUCH_ACTION_NONE = 'none';\r\nvar TOUCH_ACTION_PAN_X = 'pan-x';\r\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\r\n\r\n/**\r\n * Touch Action\r\n * sets the touchAction property or uses the js alternative\r\n * @param {Manager} manager\r\n * @param {String} value\r\n * @constructor\r\n */\r\nfunction TouchAction(manager, value) {\r\n    this.manager = manager;\r\n    this.set(value);\r\n}\r\n\r\nTouchAction.prototype = {\r\n    /**\r\n     * set the touchAction value on the element or enable the polyfill\r\n     * @param {String} value\r\n     */\r\n    set: function(value) {\r\n        // find out the touch-action by the event handlers\r\n        if (value == TOUCH_ACTION_COMPUTE) {\r\n            value = this.compute();\r\n        }\r\n\r\n        if (NATIVE_TOUCH_ACTION) {\r\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\r\n        }\r\n        this.actions = value.toLowerCase().trim();\r\n    },\r\n\r\n    /**\r\n     * just re-set the touchAction value\r\n     */\r\n    update: function() {\r\n        this.set(this.manager.options.touchAction);\r\n    },\r\n\r\n    /**\r\n     * compute the value for the touchAction property based on the recognizer's settings\r\n     * @returns {String} value\r\n     */\r\n    compute: function() {\r\n        var actions = [];\r\n        each(this.manager.recognizers, function(recognizer) {\r\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\r\n                actions = actions.concat(recognizer.getTouchAction());\r\n            }\r\n        });\r\n        return cleanTouchActions(actions.join(' '));\r\n    },\r\n\r\n    /**\r\n     * this method is called on each input cycle and provides the preventing of the browser behavior\r\n     * @param {Object} input\r\n     */\r\n    preventDefaults: function(input) {\r\n        // not needed with native support for the touchAction property\r\n        if (NATIVE_TOUCH_ACTION) {\r\n            return;\r\n        }\r\n\r\n        var srcEvent = input.srcEvent;\r\n        var direction = input.offsetDirection;\r\n\r\n        // if the touch action did prevented once this session\r\n        if (this.manager.session.prevented) {\r\n            srcEvent.preventDefault();\r\n            return;\r\n        }\r\n\r\n        var actions = this.actions;\r\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE);\r\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\r\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\r\n\r\n        if (hasNone ||\r\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\r\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\r\n            return this.preventSrc(srcEvent);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\r\n     * @param {Object} srcEvent\r\n     */\r\n    preventSrc: function(srcEvent) {\r\n        this.manager.session.prevented = true;\r\n        srcEvent.preventDefault();\r\n    }\r\n};\r\n\r\n/**\r\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\r\n * @param {String} actions\r\n * @returns {*}\r\n */\r\nfunction cleanTouchActions(actions) {\r\n    // none\r\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\r\n        return TOUCH_ACTION_NONE;\r\n    }\r\n\r\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\r\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\r\n\r\n    // pan-x and pan-y can be combined\r\n    if (hasPanX && hasPanY) {\r\n        return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;\r\n    }\r\n\r\n    // pan-x OR pan-y\r\n    if (hasPanX || hasPanY) {\r\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\r\n    }\r\n\r\n    // manipulation\r\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\r\n        return TOUCH_ACTION_MANIPULATION;\r\n    }\r\n\r\n    return TOUCH_ACTION_AUTO;\r\n}\r\n\r\n/**\r\n * Recognizer flow explained; *\r\n * All recognizers have the initial state of POSSIBLE when a input session starts.\r\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\r\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\r\n *\r\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\r\n * which determines with state it should be.\r\n *\r\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\r\n * POSSIBLE to give it another change on the next cycle.\r\n *\r\n *               Possible\r\n *                  |\r\n *            +-----+---------------+\r\n *            |                     |\r\n *      +-----+-----+               |\r\n *      |           |               |\r\n *   Failed      Cancelled          |\r\n *                          +-------+------+\r\n *                          |              |\r\n *                      Recognized       Began\r\n *                                         |\r\n *                                      Changed\r\n *                                         |\r\n *                                  Ended/Recognized\r\n */\r\nvar STATE_POSSIBLE = 1;\r\nvar STATE_BEGAN = 2;\r\nvar STATE_CHANGED = 4;\r\nvar STATE_ENDED = 8;\r\nvar STATE_RECOGNIZED = STATE_ENDED;\r\nvar STATE_CANCELLED = 16;\r\nvar STATE_FAILED = 32;\r\n\r\n/**\r\n * Recognizer\r\n * Every recognizer needs to extend from this class.\r\n * @constructor\r\n * @param {Object} options\r\n */\r\nfunction Recognizer(options) {\r\n    this.id = uniqueId();\r\n\r\n    this.manager = null;\r\n    this.options = merge(options || {}, this.defaults);\r\n\r\n    // default is enable true\r\n    this.options.enable = ifUndefined(this.options.enable, true);\r\n\r\n    this.state = STATE_POSSIBLE;\r\n\r\n    this.simultaneous = {};\r\n    this.requireFail = [];\r\n}\r\n\r\nRecognizer.prototype = {\r\n    /**\r\n     * @virtual\r\n     * @type {Object}\r\n     */\r\n    defaults: {},\r\n\r\n    /**\r\n     * set options\r\n     * @param {Object} options\r\n     * @return {Recognizer}\r\n     */\r\n    set: function(options) {\r\n        extend(this.options, options);\r\n\r\n        // also update the touchAction, in case something changed about the directions/enabled state\r\n        this.manager && this.manager.touchAction.update();\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * recognize simultaneous with an other recognizer.\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    recognizeWith: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\r\n            return this;\r\n        }\r\n\r\n        var simultaneous = this.simultaneous;\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        if (!simultaneous[otherRecognizer.id]) {\r\n            simultaneous[otherRecognizer.id] = otherRecognizer;\r\n            otherRecognizer.recognizeWith(this);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    dropRecognizeWith: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\r\n            return this;\r\n        }\r\n\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        delete this.simultaneous[otherRecognizer.id];\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * recognizer can only run when an other is failing\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    requireFailure: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\r\n            return this;\r\n        }\r\n\r\n        var requireFail = this.requireFail;\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        if (inArray(requireFail, otherRecognizer) === -1) {\r\n            requireFail.push(otherRecognizer);\r\n            otherRecognizer.requireFailure(this);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Recognizer} this\r\n     */\r\n    dropRequireFailure: function(otherRecognizer) {\r\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\r\n            return this;\r\n        }\r\n\r\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\r\n        var index = inArray(this.requireFail, otherRecognizer);\r\n        if (index > -1) {\r\n            this.requireFail.splice(index, 1);\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * has require failures boolean\r\n     * @returns {boolean}\r\n     */\r\n    hasRequireFailures: function() {\r\n        return this.requireFail.length > 0;\r\n    },\r\n\r\n    /**\r\n     * if the recognizer can recognize simultaneous with an other recognizer\r\n     * @param {Recognizer} otherRecognizer\r\n     * @returns {Boolean}\r\n     */\r\n    canRecognizeWith: function(otherRecognizer) {\r\n        return !!this.simultaneous[otherRecognizer.id];\r\n    },\r\n\r\n    /**\r\n     * You should use `tryEmit` instead of `emit` directly to check\r\n     * that all the needed recognizers has failed before emitting.\r\n     * @param {Object} input\r\n     */\r\n    emit: function(input) {\r\n        var self = this;\r\n        var state = this.state;\r\n\r\n        function emit(withState) {\r\n            self.manager.emit(self.options.event + (withState ? stateStr(state) : ''), input);\r\n        }\r\n\r\n        // 'panstart' and 'panmove'\r\n        if (state < STATE_ENDED) {\r\n            emit(true);\r\n        }\r\n\r\n        emit(); // simple 'eventName' events\r\n\r\n        // panend and pancancel\r\n        if (state >= STATE_ENDED) {\r\n            emit(true);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check that all the require failure recognizers has failed,\r\n     * if true, it emits a gesture event,\r\n     * otherwise, setup the state to FAILED.\r\n     * @param {Object} input\r\n     */\r\n    tryEmit: function(input) {\r\n        if (this.canEmit()) {\r\n            return this.emit(input);\r\n        }\r\n        // it's failing anyway\r\n        this.state = STATE_FAILED;\r\n    },\r\n\r\n    /**\r\n     * can we emit?\r\n     * @returns {boolean}\r\n     */\r\n    canEmit: function() {\r\n        var i = 0;\r\n        while (i < this.requireFail.length) {\r\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\r\n                return false;\r\n            }\r\n            i++;\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * update the recognizer\r\n     * @param {Object} inputData\r\n     */\r\n    recognize: function(inputData) {\r\n        // make a new copy of the inputData\r\n        // so we can change the inputData without messing up the other recognizers\r\n        var inputDataClone = extend({}, inputData);\r\n\r\n        // is is enabled and allow recognizing?\r\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\r\n            this.reset();\r\n            this.state = STATE_FAILED;\r\n            return;\r\n        }\r\n\r\n        // reset when we've reached the end\r\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\r\n            this.state = STATE_POSSIBLE;\r\n        }\r\n\r\n        this.state = this.process(inputDataClone);\r\n\r\n        // the recognizer has recognized a gesture\r\n        // so trigger an event\r\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\r\n            this.tryEmit(inputDataClone);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * return the state of the recognizer\r\n     * the actual recognizing happens in this method\r\n     * @virtual\r\n     * @param {Object} inputData\r\n     * @returns {Const} STATE\r\n     */\r\n    process: function(inputData) { }, // jshint ignore:line\r\n\r\n    /**\r\n     * return the preferred touch-action\r\n     * @virtual\r\n     * @returns {Array}\r\n     */\r\n    getTouchAction: function() { },\r\n\r\n    /**\r\n     * called when the gesture isn't allowed to recognize\r\n     * like when another is being recognized or it is disabled\r\n     * @virtual\r\n     */\r\n    reset: function() { }\r\n};\r\n\r\n/**\r\n * get a usable string, used as event postfix\r\n * @param {Const} state\r\n * @returns {String} state\r\n */\r\nfunction stateStr(state) {\r\n    if (state & STATE_CANCELLED) {\r\n        return 'cancel';\r\n    } else if (state & STATE_ENDED) {\r\n        return 'end';\r\n    } else if (state & STATE_CHANGED) {\r\n        return 'move';\r\n    } else if (state & STATE_BEGAN) {\r\n        return 'start';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * direction cons to string\r\n * @param {Const} direction\r\n * @returns {String}\r\n */\r\nfunction directionStr(direction) {\r\n    if (direction == DIRECTION_DOWN) {\r\n        return 'down';\r\n    } else if (direction == DIRECTION_UP) {\r\n        return 'up';\r\n    } else if (direction == DIRECTION_LEFT) {\r\n        return 'left';\r\n    } else if (direction == DIRECTION_RIGHT) {\r\n        return 'right';\r\n    }\r\n    return '';\r\n}\r\n\r\n/**\r\n * get a recognizer by name if it is bound to a manager\r\n * @param {Recognizer|String} otherRecognizer\r\n * @param {Recognizer} recognizer\r\n * @returns {Recognizer}\r\n */\r\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\r\n    var manager = recognizer.manager;\r\n    if (manager) {\r\n        return manager.get(otherRecognizer);\r\n    }\r\n    return otherRecognizer;\r\n}\r\n\r\n/**\r\n * This recognizer is just used as a base for the simple attribute recognizers.\r\n * @constructor\r\n * @extends Recognizer\r\n */\r\nfunction AttrRecognizer() {\r\n    Recognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(AttrRecognizer, Recognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof AttrRecognizer\r\n     */\r\n    defaults: {\r\n        /**\r\n         * @type {Number}\r\n         * @default 1\r\n         */\r\n        pointers: 1\r\n    },\r\n\r\n    /**\r\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\r\n     * @memberof AttrRecognizer\r\n     * @param {Object} input\r\n     * @returns {Boolean} recognized\r\n     */\r\n    attrTest: function(input) {\r\n        var optionPointers = this.options.pointers;\r\n        return optionPointers === 0 || input.pointers.length === optionPointers;\r\n    },\r\n\r\n    /**\r\n     * Process the input and return the state for the recognizer\r\n     * @memberof AttrRecognizer\r\n     * @param {Object} input\r\n     * @returns {*} State\r\n     */\r\n    process: function(input) {\r\n        var state = this.state;\r\n        var eventType = input.eventType;\r\n\r\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\r\n        var isValid = this.attrTest(input);\r\n\r\n        // on cancel input and we've recognized before, return STATE_CANCELLED\r\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\r\n            return state | STATE_CANCELLED;\r\n        } else if (isRecognized || isValid) {\r\n            if (eventType & INPUT_END) {\r\n                return state | STATE_ENDED;\r\n            } else if (!(state & STATE_BEGAN)) {\r\n                return STATE_BEGAN;\r\n            }\r\n            return state | STATE_CHANGED;\r\n        }\r\n        return STATE_FAILED;\r\n    }\r\n});\r\n\r\n/**\r\n * Pan\r\n * Recognized when the pointer is down and moved in the allowed direction.\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction PanRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n\r\n    this.pX = null;\r\n    this.pY = null;\r\n}\r\n\r\ninherit(PanRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PanRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'pan',\r\n        threshold: 10,\r\n        pointers: 1,\r\n        direction: DIRECTION_ALL\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        var direction = this.options.direction;\r\n        var actions = [];\r\n        if (direction & DIRECTION_HORIZONTAL) {\r\n            actions.push(TOUCH_ACTION_PAN_Y);\r\n        }\r\n        if (direction & DIRECTION_VERTICAL) {\r\n            actions.push(TOUCH_ACTION_PAN_X);\r\n        }\r\n        return actions;\r\n    },\r\n\r\n    directionTest: function(input) {\r\n        var options = this.options;\r\n        var hasMoved = true;\r\n        var distance = input.distance;\r\n        var direction = input.direction;\r\n        var x = input.deltaX;\r\n        var y = input.deltaY;\r\n\r\n        // lock to axis?\r\n        if (!(direction & options.direction)) {\r\n            if (options.direction & DIRECTION_HORIZONTAL) {\r\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\r\n                hasMoved = x != this.pX;\r\n                distance = Math.abs(input.deltaX);\r\n            } else {\r\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\r\n                hasMoved = y != this.pY;\r\n                distance = Math.abs(input.deltaY);\r\n            }\r\n        }\r\n        input.direction = direction;\r\n        return hasMoved && distance > options.threshold && direction & options.direction;\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\r\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\r\n    },\r\n\r\n    emit: function(input) {\r\n        this.pX = input.deltaX;\r\n        this.pY = input.deltaY;\r\n\r\n        var direction = directionStr(input.direction);\r\n        if (direction) {\r\n            this.manager.emit(this.options.event + direction, input);\r\n        }\r\n\r\n        this._super.emit.call(this, input);\r\n    }\r\n});\r\n\r\n/**\r\n * Pinch\r\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction PinchRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(PinchRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PinchRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'pinch',\r\n        threshold: 0,\r\n        pointers: 2\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_NONE];\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        return this._super.attrTest.call(this, input) &&\r\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\r\n    },\r\n\r\n    emit: function(input) {\r\n        this._super.emit.call(this, input);\r\n        if (input.scale !== 1) {\r\n            var inOut = input.scale < 1 ? 'in' : 'out';\r\n            this.manager.emit(this.options.event + inOut, input);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Press\r\n * Recognized when the pointer is down for x ms without any movement.\r\n * @constructor\r\n * @extends Recognizer\r\n */\r\nfunction PressRecognizer() {\r\n    Recognizer.apply(this, arguments);\r\n\r\n    this._timer = null;\r\n    this._input = null;\r\n}\r\n\r\ninherit(PressRecognizer, Recognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PressRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'press',\r\n        pointers: 1,\r\n        time: 500, // minimal time of the pointer to be pressed\r\n        threshold: 5 // a minimal movement is ok, but keep it low\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_AUTO];\r\n    },\r\n\r\n    process: function(input) {\r\n        var options = this.options;\r\n        var validPointers = input.pointers.length === options.pointers;\r\n        var validMovement = input.distance < options.threshold;\r\n        var validTime = input.deltaTime > options.time;\r\n\r\n        this._input = input;\r\n\r\n        // we only allow little movement\r\n        // and we've reached an end event, so a tap is possible\r\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\r\n            this.reset();\r\n        } else if (input.eventType & INPUT_START) {\r\n            this.reset();\r\n            this._timer = setTimeoutContext(function() {\r\n                this.state = STATE_RECOGNIZED;\r\n                this.tryEmit();\r\n            }, options.time, this);\r\n        } else if (input.eventType & INPUT_END) {\r\n            return STATE_RECOGNIZED;\r\n        }\r\n        return STATE_FAILED;\r\n    },\r\n\r\n    reset: function() {\r\n        clearTimeout(this._timer);\r\n    },\r\n\r\n    emit: function(input) {\r\n        if (this.state !== STATE_RECOGNIZED) {\r\n            return;\r\n        }\r\n\r\n        if (input && (input.eventType & INPUT_END)) {\r\n            this.manager.emit(this.options.event + 'up', input);\r\n        } else {\r\n            this._input.timeStamp = now();\r\n            this.manager.emit(this.options.event, this._input);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Rotate\r\n * Recognized when two or more pointer are moving in a circular motion.\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction RotateRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(RotateRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof RotateRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'rotate',\r\n        threshold: 0,\r\n        pointers: 2\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_NONE];\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        return this._super.attrTest.call(this, input) &&\r\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\r\n    }\r\n});\r\n\r\n/**\r\n * Swipe\r\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\r\n * @constructor\r\n * @extends AttrRecognizer\r\n */\r\nfunction SwipeRecognizer() {\r\n    AttrRecognizer.apply(this, arguments);\r\n}\r\n\r\ninherit(SwipeRecognizer, AttrRecognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof SwipeRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'swipe',\r\n        threshold: 10,\r\n        velocity: 0.65,\r\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\r\n        pointers: 1\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return PanRecognizer.prototype.getTouchAction.call(this);\r\n    },\r\n\r\n    attrTest: function(input) {\r\n        var direction = this.options.direction;\r\n        var velocity;\r\n\r\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\r\n            velocity = input.velocity;\r\n        } else if (direction & DIRECTION_HORIZONTAL) {\r\n            velocity = input.velocityX;\r\n        } else if (direction & DIRECTION_VERTICAL) {\r\n            velocity = input.velocityY;\r\n        }\r\n\r\n        return this._super.attrTest.call(this, input) &&\r\n            direction & input.direction &&\r\n            input.distance > this.options.threshold &&\r\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\r\n    },\r\n\r\n    emit: function(input) {\r\n        var direction = directionStr(input.direction);\r\n        if (direction) {\r\n            this.manager.emit(this.options.event + direction, input);\r\n        }\r\n\r\n        this.manager.emit(this.options.event, input);\r\n    }\r\n});\r\n\r\n/**\r\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\r\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\r\n * a single tap.\r\n *\r\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\r\n * multi-taps being recognized.\r\n * @constructor\r\n * @extends Recognizer\r\n */\r\nfunction TapRecognizer() {\r\n    Recognizer.apply(this, arguments);\r\n\r\n    // previous time and center,\r\n    // used for tap counting\r\n    this.pTime = false;\r\n    this.pCenter = false;\r\n\r\n    this._timer = null;\r\n    this._input = null;\r\n    this.count = 0;\r\n}\r\n\r\ninherit(TapRecognizer, Recognizer, {\r\n    /**\r\n     * @namespace\r\n     * @memberof PinchRecognizer\r\n     */\r\n    defaults: {\r\n        event: 'tap',\r\n        pointers: 1,\r\n        taps: 1,\r\n        interval: 300, // max time between the multi-tap taps\r\n        time: 250, // max time of the pointer to be down (like finger on the screen)\r\n        threshold: 2, // a minimal movement is ok, but keep it low\r\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\r\n    },\r\n\r\n    getTouchAction: function() {\r\n        return [TOUCH_ACTION_MANIPULATION];\r\n    },\r\n\r\n    process: function(input) {\r\n        var options = this.options;\r\n\r\n        var validPointers = input.pointers.length === options.pointers;\r\n        var validMovement = input.distance < options.threshold;\r\n        var validTouchTime = input.deltaTime < options.time;\r\n\r\n        this.reset();\r\n\r\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\r\n            return this.failTimeout();\r\n        }\r\n\r\n        // we only allow little movement\r\n        // and we've reached an end event, so a tap is possible\r\n        if (validMovement && validTouchTime && validPointers) {\r\n            if (input.eventType != INPUT_END) {\r\n                return this.failTimeout();\r\n            }\r\n\r\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\r\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\r\n\r\n            this.pTime = input.timeStamp;\r\n            this.pCenter = input.center;\r\n\r\n            if (!validMultiTap || !validInterval) {\r\n                this.count = 1;\r\n            } else {\r\n                this.count += 1;\r\n            }\r\n\r\n            this._input = input;\r\n\r\n            // if tap count matches we have recognized it,\r\n            // else it has began recognizing...\r\n            var tapCount = this.count % options.taps;\r\n            if (tapCount === 0) {\r\n                // no failing requirements, immediately trigger the tap event\r\n                // or wait as long as the multitap interval to trigger\r\n                if (!this.hasRequireFailures()) {\r\n                    return STATE_RECOGNIZED;\r\n                } else {\r\n                    this._timer = setTimeoutContext(function() {\r\n                        this.state = STATE_RECOGNIZED;\r\n                        this.tryEmit();\r\n                    }, options.interval, this);\r\n                    return STATE_BEGAN;\r\n                }\r\n            }\r\n        }\r\n        return STATE_FAILED;\r\n    },\r\n\r\n    failTimeout: function() {\r\n        this._timer = setTimeoutContext(function() {\r\n            this.state = STATE_FAILED;\r\n        }, this.options.interval, this);\r\n        return STATE_FAILED;\r\n    },\r\n\r\n    reset: function() {\r\n        clearTimeout(this._timer);\r\n    },\r\n\r\n    emit: function() {\r\n        if (this.state == STATE_RECOGNIZED ) {\r\n            this._input.tapCount = this.count;\r\n            this.manager.emit(this.options.event, this._input);\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Simple way to create an manager with a default set of recognizers.\r\n * @param {HTMLElement} element\r\n * @param {Object} [options]\r\n * @constructor\r\n */\r\nfunction Hammer(element, options) {\r\n    options = options || {};\r\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\r\n    return new Manager(element, options);\r\n}\r\n\r\n/**\r\n * @const {string}\r\n */\r\nHammer.VERSION = '2.0.4';\r\n\r\n/**\r\n * default settings\r\n * @namespace\r\n */\r\nHammer.defaults = {\r\n    /**\r\n     * set if DOM events are being triggered.\r\n     * But this is slower and unused by simple implementations, so disabled by default.\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n    domEvents: false,\r\n\r\n    /**\r\n     * The value for the touchAction property/fallback.\r\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\r\n     * @type {String}\r\n     * @default compute\r\n     */\r\n    touchAction: TOUCH_ACTION_COMPUTE,\r\n\r\n    /**\r\n     * @type {Boolean}\r\n     * @default true\r\n     */\r\n    enable: true,\r\n\r\n    /**\r\n     * EXPERIMENTAL FEATURE -- can be removed/changed\r\n     * Change the parent input target element.\r\n     * If Null, then it is being set the to main element.\r\n     * @type {Null|EventTarget}\r\n     * @default null\r\n     */\r\n    inputTarget: null,\r\n\r\n    /**\r\n     * force an input class\r\n     * @type {Null|Function}\r\n     * @default null\r\n     */\r\n    inputClass: null,\r\n\r\n    /**\r\n     * Default recognizer setup when calling `Hammer()`\r\n     * When creating a new Manager these will be skipped.\r\n     * @type {Array}\r\n     */\r\n    preset: [\r\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\r\n        [RotateRecognizer, { enable: false }],\r\n        [PinchRecognizer, { enable: false }, ['rotate']],\r\n        [SwipeRecognizer,{ direction: DIRECTION_HORIZONTAL }],\r\n        [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']],\r\n        [TapRecognizer],\r\n        [TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']],\r\n        [PressRecognizer]\r\n    ],\r\n\r\n    /**\r\n     * Some CSS properties can be used to improve the working of Hammer.\r\n     * Add them to this method and they will be set when creating a new Manager.\r\n     * @namespace\r\n     */\r\n    cssProps: {\r\n        /**\r\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        userSelect: 'none',\r\n\r\n        /**\r\n         * Disable the Windows Phone grippers when pressing an element.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        touchSelect: 'none',\r\n\r\n        /**\r\n         * Disables the default callout shown when you touch and hold a touch target.\r\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\r\n         * a callout containing information about the link. This property allows you to disable that callout.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        touchCallout: 'none',\r\n\r\n        /**\r\n         * Specifies whether zooming is enabled. Used by IE10>\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        contentZooming: 'none',\r\n\r\n        /**\r\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\r\n         * @type {String}\r\n         * @default 'none'\r\n         */\r\n        userDrag: 'none',\r\n\r\n        /**\r\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\r\n         * clickable element in iOS. This property obeys the alpha value, if specified.\r\n         * @type {String}\r\n         * @default 'rgba(0,0,0,0)'\r\n         */\r\n        tapHighlightColor: 'rgba(0,0,0,0)'\r\n    }\r\n};\r\n\r\nvar STOP = 1;\r\nvar FORCED_STOP = 2;\r\n\r\n/**\r\n * Manager\r\n * @param {HTMLElement} element\r\n * @param {Object} [options]\r\n * @constructor\r\n */\r\nfunction Manager(element, options) {\r\n    options = options || {};\r\n\r\n    this.options = merge(options, Hammer.defaults);\r\n    this.options.inputTarget = this.options.inputTarget || element;\r\n\r\n    this.handlers = {};\r\n    this.session = {};\r\n    this.recognizers = [];\r\n\r\n    this.element = element;\r\n    this.input = createInputInstance(this);\r\n    this.touchAction = new TouchAction(this, this.options.touchAction);\r\n\r\n    toggleCssProps(this, true);\r\n\r\n    each(options.recognizers, function(item) {\r\n        var recognizer = this.add(new (item[0])(item[1]));\r\n        item[2] && recognizer.recognizeWith(item[2]);\r\n        item[3] && recognizer.requireFailure(item[3]);\r\n    }, this);\r\n}\r\n\r\nManager.prototype = {\r\n    /**\r\n     * set options\r\n     * @param {Object} options\r\n     * @returns {Manager}\r\n     */\r\n    set: function(options) {\r\n        extend(this.options, options);\r\n\r\n        // Options that need a little more setup\r\n        if (options.touchAction) {\r\n            this.touchAction.update();\r\n        }\r\n        if (options.inputTarget) {\r\n            // Clean up existing event listeners and reinitialize\r\n            this.input.destroy();\r\n            this.input.target = options.inputTarget;\r\n            this.input.init();\r\n        }\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * stop recognizing for this session.\r\n     * This session will be discarded, when a new [input]start event is fired.\r\n     * When forced, the recognizer cycle is stopped immediately.\r\n     * @param {Boolean} [force]\r\n     */\r\n    stop: function(force) {\r\n        this.session.stopped = force ? FORCED_STOP : STOP;\r\n    },\r\n\r\n    /**\r\n     * run the recognizers!\r\n     * called by the inputHandler function on every movement of the pointers (touches)\r\n     * it walks through all the recognizers and tries to detect the gesture that is being made\r\n     * @param {Object} inputData\r\n     */\r\n    recognize: function(inputData) {\r\n        var session = this.session;\r\n        if (session.stopped) {\r\n            return;\r\n        }\r\n\r\n        // run the touch-action polyfill\r\n        this.touchAction.preventDefaults(inputData);\r\n\r\n        var recognizer;\r\n        var recognizers = this.recognizers;\r\n\r\n        // this holds the recognizer that is being recognized.\r\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\r\n        // if no recognizer is detecting a thing, it is set to `null`\r\n        var curRecognizer = session.curRecognizer;\r\n\r\n        // reset when the last recognizer is recognized\r\n        // or when we're in a new session\r\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\r\n            curRecognizer = session.curRecognizer = null;\r\n        }\r\n\r\n        var i = 0;\r\n        while (i < recognizers.length) {\r\n            recognizer = recognizers[i];\r\n\r\n            // find out if we are allowed try to recognize the input for this one.\r\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\r\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\r\n            //      that is being recognized.\r\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\r\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\r\n            if (session.stopped !== FORCED_STOP && ( // 1\r\n                    !curRecognizer || recognizer == curRecognizer || // 2\r\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\r\n                recognizer.recognize(inputData);\r\n            } else {\r\n                recognizer.reset();\r\n            }\r\n\r\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\r\n            // current active recognizer. but only if we don't already have an active recognizer\r\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\r\n                curRecognizer = session.curRecognizer = recognizer;\r\n            }\r\n            i++;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * get a recognizer by its event name.\r\n     * @param {Recognizer|String} recognizer\r\n     * @returns {Recognizer|Null}\r\n     */\r\n    get: function(recognizer) {\r\n        if (recognizer instanceof Recognizer) {\r\n            return recognizer;\r\n        }\r\n\r\n        var recognizers = this.recognizers;\r\n        for (var i = 0; i < recognizers.length; i++) {\r\n            if (recognizers[i].options.event == recognizer) {\r\n                return recognizers[i];\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * add a recognizer to the manager\r\n     * existing recognizers with the same event name will be removed\r\n     * @param {Recognizer} recognizer\r\n     * @returns {Recognizer|Manager}\r\n     */\r\n    add: function(recognizer) {\r\n        if (invokeArrayArg(recognizer, 'add', this)) {\r\n            return this;\r\n        }\r\n\r\n        // remove existing\r\n        var existing = this.get(recognizer.options.event);\r\n        if (existing) {\r\n            this.remove(existing);\r\n        }\r\n\r\n        this.recognizers.push(recognizer);\r\n        recognizer.manager = this;\r\n\r\n        this.touchAction.update();\r\n        return recognizer;\r\n    },\r\n\r\n    /**\r\n     * remove a recognizer by name or instance\r\n     * @param {Recognizer|String} recognizer\r\n     * @returns {Manager}\r\n     */\r\n    remove: function(recognizer) {\r\n        if (invokeArrayArg(recognizer, 'remove', this)) {\r\n            return this;\r\n        }\r\n\r\n        var recognizers = this.recognizers;\r\n        recognizer = this.get(recognizer);\r\n        recognizers.splice(inArray(recognizers, recognizer), 1);\r\n\r\n        this.touchAction.update();\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * bind event\r\n     * @param {String} events\r\n     * @param {Function} handler\r\n     * @returns {EventEmitter} this\r\n     */\r\n    on: function(events, handler) {\r\n        var handlers = this.handlers;\r\n        each(splitStr(events), function(event) {\r\n            handlers[event] = handlers[event] || [];\r\n            handlers[event].push(handler);\r\n        });\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * unbind event, leave emit blank to remove all handlers\r\n     * @param {String} events\r\n     * @param {Function} [handler]\r\n     * @returns {EventEmitter} this\r\n     */\r\n    off: function(events, handler) {\r\n        var handlers = this.handlers;\r\n        each(splitStr(events), function(event) {\r\n            if (!handler) {\r\n                delete handlers[event];\r\n            } else {\r\n                handlers[event].splice(inArray(handlers[event], handler), 1);\r\n            }\r\n        });\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * emit event to the listeners\r\n     * @param {String} event\r\n     * @param {Object} data\r\n     */\r\n    emit: function(event, data) {\r\n        // we also want to trigger dom events\r\n        if (this.options.domEvents) {\r\n            triggerDomEvent(event, data);\r\n        }\r\n\r\n        // no handlers, so skip it all\r\n        var handlers = this.handlers[event] && this.handlers[event].slice();\r\n        if (!handlers || !handlers.length) {\r\n            return;\r\n        }\r\n\r\n        data.type = event;\r\n        data.preventDefault = function() {\r\n            data.srcEvent.preventDefault();\r\n        };\r\n\r\n        var i = 0;\r\n        while (i < handlers.length) {\r\n            handlers[i](data);\r\n            i++;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * destroy the manager and unbinds all events\r\n     * it doesn't unbind dom events, that is the user own responsibility\r\n     */\r\n    destroy: function() {\r\n        this.element && toggleCssProps(this, false);\r\n\r\n        this.handlers = {};\r\n        this.session = {};\r\n        this.input.destroy();\r\n        this.element = null;\r\n    }\r\n};\r\n\r\n/**\r\n * add/remove the css properties as defined in manager.options.cssProps\r\n * @param {Manager} manager\r\n * @param {Boolean} add\r\n */\r\nfunction toggleCssProps(manager, add) {\r\n    var element = manager.element;\r\n    each(manager.options.cssProps, function(value, name) {\r\n        element.style[prefixed(element.style, name)] = add ? value : '';\r\n    });\r\n}\r\n\r\n/**\r\n * trigger dom event\r\n * @param {String} event\r\n * @param {Object} data\r\n */\r\nfunction triggerDomEvent(event, data) {\r\n    var gestureEvent = document.createEvent('Event');\r\n    gestureEvent.initEvent(event, true, true);\r\n    gestureEvent.gesture = data;\r\n    data.target.dispatchEvent(gestureEvent);\r\n}\r\n\r\nextend(Hammer, {\r\n    INPUT_START: INPUT_START,\r\n    INPUT_MOVE: INPUT_MOVE,\r\n    INPUT_END: INPUT_END,\r\n    INPUT_CANCEL: INPUT_CANCEL,\r\n\r\n    STATE_POSSIBLE: STATE_POSSIBLE,\r\n    STATE_BEGAN: STATE_BEGAN,\r\n    STATE_CHANGED: STATE_CHANGED,\r\n    STATE_ENDED: STATE_ENDED,\r\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\r\n    STATE_CANCELLED: STATE_CANCELLED,\r\n    STATE_FAILED: STATE_FAILED,\r\n\r\n    DIRECTION_NONE: DIRECTION_NONE,\r\n    DIRECTION_LEFT: DIRECTION_LEFT,\r\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\r\n    DIRECTION_UP: DIRECTION_UP,\r\n    DIRECTION_DOWN: DIRECTION_DOWN,\r\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\r\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\r\n    DIRECTION_ALL: DIRECTION_ALL,\r\n\r\n    Manager: Manager,\r\n    Input: Input,\r\n    TouchAction: TouchAction,\r\n\r\n    TouchInput: TouchInput,\r\n    MouseInput: MouseInput,\r\n    PointerEventInput: PointerEventInput,\r\n    TouchMouseInput: TouchMouseInput,\r\n    SingleTouchInput: SingleTouchInput,\r\n\r\n    Recognizer: Recognizer,\r\n    AttrRecognizer: AttrRecognizer,\r\n    Tap: TapRecognizer,\r\n    Pan: PanRecognizer,\r\n    Swipe: SwipeRecognizer,\r\n    Pinch: PinchRecognizer,\r\n    Rotate: RotateRecognizer,\r\n    Press: PressRecognizer,\r\n\r\n    on: addEventListeners,\r\n    off: removeEventListeners,\r\n    each: each,\r\n    merge: merge,\r\n    extend: extend,\r\n    inherit: inherit,\r\n    bindFn: bindFn,\r\n    prefixed: prefixed\r\n});\r\n\r\nif (typeof define == TYPE_FUNCTION && define.amd) {\r\n    define(function() {\r\n        return Hammer;\r\n    });\r\n} else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = Hammer;\r\n} else {\r\n    window[exportName] = Hammer;\r\n}\r\n\r\n})(window, document, 'Hammer');\r\n\n},{}],4:[function(require,module,exports){\n(function (process){\n// Rebound\n// =======\n// **Rebound** is a simple library that models Spring dynamics for the\n// purpose of driving physical animations.\n//\n// Origin\n// ------\n// [Rebound](http://facebook.github.io/rebound) was originally written\n// in Java to provide a lightweight physics system for\n// [Facebook Home](https://play.google.com/store/apps/details?id=com.facebook.home)\n// and [Chat Heads](https://play.google.com/store/apps/details?id=com.facebook.orca)\n// on Android. It's now been adopted by several other Android\n// applications. This JavaScript port was written to provide a quick\n// way to demonstrate Rebound animations on the web for a\n// [conference talk](https://www.youtube.com/watch?v=s5kNm-DgyjY). Since then the\n// JavaScript version has been used to build some really nice interfaces.\n// Check out [brandonwalkin.com](http://brandonwalkin.com) for an\n// example.\n//\n// Overview\n// --------\n// The Library provides a SpringSystem for maintaining a set of Spring\n// objects and iterating those Springs through a physics solver loop\n// until equilibrium is achieved. The Spring class is the basic\n// animation driver provided by Rebound. By attaching a listener to\n// a Spring, you can observe its motion. The observer function is\n// notified of position changes on the spring as it solves for\n// equilibrium. These position updates can be mapped to an animation\n// range to drive animated property updates on your user interface\n// elements (translation, rotation, scale, etc).\n//\n// Example\n// -------\n// Here's a simple example. Pressing and releasing on the logo below\n// will cause it to scale up and down with a springy animation.\n//\n// <div style=\"text-align:center; margin-bottom:50px; margin-top:50px\">\n//   <img src=\"http://facebook.github.io/rebound/images/rebound.png\" id=\"logo\" />\n// </div>\n// <script src=\"../rebound.min.js\"></script>\n// <script>\n//\n// function scale(el, val) {\n//   el.style.mozTransform =\n//   el.style.msTransform =\n//   el.style.webkitTransform =\n//   el.style.transform = 'scale3d(' + val + ', ' + val + ', 1)';\n// }\n// var el = document.getElementById('logo');\n//\n// var springSystem = new rebound.SpringSystem();\n// var spring = springSystem.createSpring(50, 3);\n// spring.addListener({\n//   onSpringUpdate: function(spring) {\n//     var val = spring.getCurrentValue();\n//     val = rebound.MathUtil.mapValueInRange(val, 0, 1, 1, 0.5);\n//     scale(el, val);\n//   }\n// });\n//\n// el.addEventListener('mousedown', function() {\n//   spring.setEndValue(1);\n// });\n//\n// el.addEventListener('mouseout', function() {\n//   spring.setEndValue(0);\n// });\n//\n// el.addEventListener('mouseup', function() {\n//   spring.setEndValue(0);\n// });\n//\n// </script>\n//\n// Here's how it works.\n//\n// ```\n// // Get a reference to the logo element.\n// var el = document.getElementById('logo');\n//\n// // create a SpringSystem and a Spring with a bouncy config.\n// var springSystem = new rebound.SpringSystem();\n// var spring = springSystem.createSpring(50, 3);\n//\n// // Add a listener to the spring. Every time the physics\n// // solver updates the Spring's value onSpringUpdate will\n// // be called.\n// spring.addListener({\n//   onSpringUpdate: function(spring) {\n//     var val = spring.getCurrentValue();\n//     val = rebound.MathUtil\n//                  .mapValueInRange(val, 0, 1, 1, 0.5);\n//     scale(el, val);\n//   }\n// });\n//\n// // Listen for mouse down/up/out and toggle the\n// //springs endValue from 0 to 1.\n// el.addEventListener('mousedown', function() {\n//   spring.setEndValue(1);\n// });\n//\n// el.addEventListener('mouseout', function() {\n//   spring.setEndValue(0);\n// });\n//\n// el.addEventListener('mouseup', function() {\n//   spring.setEndValue(0);\n// });\n//\n// // Helper for scaling an element with css transforms.\n// function scale(el, val) {\n//   el.style.mozTransform =\n//   el.style.msTransform =\n//   el.style.webkitTransform =\n//   el.style.transform = 'scale3d(' +\n//     val + ', ' + val + ', 1)';\n// }\n// ```\n\n(function() {\n  var rebound = {};\n  var util = rebound.util = {};\n  var concat = Array.prototype.concat;\n  var slice = Array.prototype.slice;\n\n  // Bind a function to a context object.\n  util.bind = function bind(func, context) {\n    args = slice.call(arguments, 2);\n    return function() {\n      func.apply(context, concat.call(args, slice.call(arguments)));\n    };\n  };\n\n  // Add all the properties in the source to the target.\n  util.extend = function extend(target, source) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        target[key] = source[key];\n      }\n    }\n  };\n\n  // SpringSystem\n  // ------------\n  // **SpringSystem** is a set of Springs that all run on the same physics\n  // timing loop. To get started with a Rebound animation you first\n  // create a new SpringSystem and then add springs to it.\n  var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {\n    this._springRegistry = {};\n    this._activeSprings = [];\n    this.listeners = [];\n    this._idleSpringIndices = [];\n    this.looper = looper || new AnimationLooper();\n    this.looper.springSystem = this;\n  };\n\n  util.extend(SpringSystem.prototype, {\n\n    _springRegistry: null,\n\n    _isIdle: true,\n\n    _lastTimeMillis: -1,\n\n    _activeSprings: null,\n\n    listeners: null,\n\n    _idleSpringIndices: null,\n\n    // A SpringSystem is iterated by a looper. The looper is responsible\n    // for executing each frame as the SpringSystem is resolved to idle.\n    // There are three types of Loopers described below AnimationLooper,\n    // SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n    // the default as it is the most useful for common UI animations.\n    setLooper: function(looper) {\n      this.looper = looper\n      looper.springSystem = this;\n    },\n\n    // Create and register a new spring with the SpringSystem. This\n    // Spring will now be solved for during the physics iteration loop. By default\n    // the spring will use the default Origami spring config with 40 tension and 7\n    // friction, but you can also provide your own values here.\n    createSpring: function(tension, friction) {\n      var spring = new Spring(this);\n      this.registerSpring(spring);\n      if (typeof tension === 'undefined' || typeof friction === 'undefined') {\n        spring.setSpringConfig(SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG);\n      } else {\n        var springConfig = SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n        spring.setSpringConfig(springConfig);\n      }\n      return spring;\n    },\n\n    // You can check if a SpringSystem is idle or active by calling\n    // getIsIdle. If all of the Springs in the SpringSystem are at rest,\n    // i.e. the physics forces have reached equilibrium, then this\n    // method will return true.\n    getIsIdle: function() {\n      return this._isIdle;\n    },\n\n    // Retrieve a specific Spring from the SpringSystem by id. This\n    // can be useful for inspecting the state of a spring before\n    // or after an integration loop in the SpringSystem executes.\n    getSpringById: function (id) {\n      return this._springRegistry[id];\n    },\n\n    // Get a listing of all the springs registered with this\n    // SpringSystem.\n    getAllSprings: function() {\n      var vals = [];\n      for (var id in this._springRegistry) {\n        if (this._springRegistry.hasOwnProperty(id)) {\n          vals.push(this._springRegistry[id]);\n        }\n      }\n      return vals;\n    },\n\n    // registerSpring is called automatically as soon as you create\n    // a Spring with SpringSystem#createSpring. This method sets the\n    // spring up in the registry so that it can be solved in the\n    // solver loop.\n    registerSpring: function(spring) {\n      this._springRegistry[spring.getId()] = spring;\n    },\n\n    // Deregister a spring with this SpringSystem. The SpringSystem will\n    // no longer consider this Spring during its integration loop once\n    // this is called. This is normally done automatically for you when\n    // you call Spring#destroy.\n    deregisterSpring: function(spring) {\n      removeFirst(this._activeSprings, spring);\n      delete this._springRegistry[spring.getId()];\n    },\n\n    advance: function(time, deltaTime) {\n      while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();\n      for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n        var spring = this._activeSprings[i];\n        if (spring.systemShouldAdvance()) {\n          spring.advance(time / 1000.0, deltaTime / 1000.0);\n        } else {\n          this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n        }\n      }\n      while(this._idleSpringIndices.length > 0) {\n        var idx = this._idleSpringIndices.pop();\n        idx >= 0 && this._activeSprings.splice(idx, 1);\n      }\n    },\n\n    // This is our main solver loop called to move the simulation\n    // forward through time. Before each pass in the solver loop\n    // onBeforeIntegrate is called on an any listeners that have\n    // registered themeselves with the SpringSystem. This gives you\n    // an opportunity to apply any constraints or adjustments to\n    // the springs that should be enforced before each iteration\n    // loop. Next the advance method is called to move each Spring in\n    // the systemShouldAdvance forward to the current time. After the\n    // integration step runs in advance, onAfterIntegrate is called\n    // on any listeners that have registered themselves with the\n    // SpringSystem. This gives you an opportunity to run any post\n    // integration constraints or adjustments on the Springs in the\n    // SpringSystem.\n    loop: function(currentTimeMillis) {\n      var listener;\n      if (this._lastTimeMillis === -1) {\n        this._lastTimeMillis = currentTimeMillis -1;\n      }\n      var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n      this._lastTimeMillis = currentTimeMillis;\n\n      var i = 0, len = this.listeners.length;\n      for (i = 0; i < len; i++) {\n        var listener = this.listeners[i];\n        listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n      }\n\n      this.advance(currentTimeMillis, ellapsedMillis);\n      if (this._activeSprings.length === 0) {\n        this._isIdle = true;\n        this._lastTimeMillis = -1;\n      }\n\n      for (i = 0; i < len; i++) {\n        var listener = this.listeners[i];\n        listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n      }\n\n      if (!this._isIdle) {\n        this.looper.run();\n      }\n    },\n\n    // activateSpring is used to notify the SpringSystem that a Spring\n    // has become displaced. The system responds by starting its solver\n    // loop up if it is currently idle.\n    activateSpring: function(springId) {\n      var spring = this._springRegistry[springId];\n      if (this._activeSprings.indexOf(spring) == -1) {\n        this._activeSprings.push(spring);\n      }\n      if (this.getIsIdle()) {\n        this._isIdle = false;\n        this.looper.run();\n      }\n    },\n\n    // Add a listener to the SpringSystem so that you can receive\n    // before/after integration notifications allowing Springs to be\n    // constrained or adjusted.\n    addListener: function(listener) {\n      this.listeners.push(listener);\n    },\n\n    // Remove a previously added listener on the SpringSystem.\n    removeListener: function(listener) {\n      removeFirst(this.listeners, listener);\n    },\n\n    // Remove all previously added listeners on the SpringSystem.\n    removeAllListeners: function() {\n      this.listeners = [];\n    }\n\n  });\n\n  // Spring\n  // ------\n  // **Spring** provides a model of a classical spring acting to\n  // resolve a body to equilibrium. Springs have configurable\n  // tension which is a force multipler on the displacement of the\n  // spring from its rest point or `endValue` as defined by [Hooke’s\n  // law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n  // configurable friction, which ensures that they do not oscillate\n  // infinitely. When a Spring is displaced by updating it’s resting\n  // or `currentValue`, the SpringSystems that contain that Spring\n  // will automatically start looping to solve for equilibrium. As each\n  // timestep passes, `SpringListener` objects attached to the Spring\n  // will be notified of the updates providing a way to drive an\n  // animation off of the spring's resolution curve.\n  var Spring = rebound.Spring = function Spring(springSystem) {\n    this._id = 's' + Spring._ID++;\n    this._springSystem = springSystem;\n    this.listeners = [];\n    this._currentState = new PhysicsState();\n    this._previousState = new PhysicsState();\n    this._tempState = new PhysicsState();\n  };\n\n  util.extend(Spring, {\n    _ID: 0,\n\n    MAX_DELTA_TIME_SEC: 0.064,\n\n    SOLVER_TIMESTEP_SEC: 0.001\n\n  });\n\n  util.extend(Spring.prototype, {\n\n    _id: 0,\n\n    _springConfig: null,\n\n    _overshootClampingEnabled: false,\n\n    _currentState: null,\n\n    _previousState: null,\n\n    _tempState: null,\n\n    _startValue: 0,\n\n    _endValue: 0,\n\n    _wasAtRest: true,\n\n    _restSpeedThreshold: 0.001,\n\n    _displacementFromRestThreshold: 0.001,\n\n    listeners: null,\n\n    _timeAccumulator: 0,\n\n    _springSystem: null,\n\n    // Remove a Spring from simulation and clear its listeners.\n    destroy: function() {\n      this.listeners = [];\n      this.frames = [];\n      this._springSystem.deregisterSpring(this);\n    },\n\n    // Get the id of the spring, which can be used to retrieve it from\n    // the SpringSystems it participates in later.\n    getId: function() {\n      return this._id;\n    },\n\n    // Set the configuration values for this Spring. A SpringConfig\n    // contains the tension and friction values used to solve for the\n    // equilibrium of the Spring in the physics loop.\n    setSpringConfig: function(springConfig) {\n      this._springConfig = springConfig;\n      return this;\n    },\n\n    // Retrieve the SpringConfig used by this Spring.\n    getSpringConfig: function() {\n      return this._springConfig;\n    },\n\n    // Set the current position of this Spring. Listeners will be updated\n    // with this value immediately. If the rest or `endValue` is not\n    // updated to match this value, then the spring will be dispalced and\n    // the SpringSystem will start to loop to restore the spring to the\n    // `endValue`.\n    //\n    // A common pattern is to move a Spring around without animation by\n    // calling.\n    //\n    // ```\n    // spring.setCurrentValue(n).setAtRest();\n    // ```\n    //\n    // This moves the Spring to a new position `n`, sets the endValue\n    // to `n`, and removes any velocity from the `Spring`. By doing\n    // this you can allow the `SpringListener` to manage the position\n    // of UI elements attached to the spring even when moving without\n    // animation. For example, when dragging an element you can\n    // update the position of an attached view through a spring\n    // by calling `spring.setCurrentValue(x)`. When\n    // the gesture ends you can update the Springs\n    // velocity and endValue\n    // `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n    // to cause it to naturally animate the UI element to the resting\n    // position taking into account existing velocity. The codepaths for\n    // synchronous movement and spring driven animation can\n    // be unified using this technique.\n    setCurrentValue: function(currentValue, skipSetAtRest) {\n      this._startValue = currentValue;\n      this._currentState.position = currentValue;\n      if (!skipSetAtRest) {\n        this.setAtRest();\n      }\n      this.notifyPositionUpdated(false, false);\n      return this;\n    },\n\n    // Get the position that the most recent animation started at. This\n    // can be useful for determining the number off oscillations that\n    // have occurred.\n    getStartValue: function() {\n      return this._startValue;\n    },\n\n    // Retrieve the current value of the Spring.\n    getCurrentValue: function() {\n      return this._currentState.position;\n    },\n\n    // Get the absolute distance of the Spring from it’s resting endValue position.\n    getCurrentDisplacementDistance: function() {\n      return this.getDisplacementDistanceForState(this._currentState);\n    },\n\n    getDisplacementDistanceForState: function(state) {\n      return Math.abs(this._endValue - state.position);\n    },\n\n    // Set the endValue or resting position of the spring. If this\n    // value is different than the current value, the SpringSystem will\n    // be notified and will begin running its solver loop to resolve\n    // the Spring to equilibrium. Any listeners that are registered\n    // for onSpringEndStateChange will also be notified of this update\n    // immediately.\n    setEndValue: function(endValue) {\n      if (this._endValue == endValue && this.isAtRest())  {\n        return this;\n      }\n      this._startValue = this.getCurrentValue();\n      this._endValue = endValue;\n      this._springSystem.activateSpring(this.getId());\n      for (var i = 0, len = this.listeners.length; i < len; i++) {\n        var listener = this.listeners[i];\n        listener.onSpringEndStateChange && listener.onSpringEndStateChange(this);\n      }\n      return this;\n    },\n\n    // Retrieve the endValue or resting position of this spring.\n    getEndValue: function() {\n      return this._endValue;\n    },\n\n    // Set the current velocity of the Spring. As previously mentioned,\n    // this can be useful when you are performing a direct manipulation\n    // gesture. When a UI element is released you may call setVelocity\n    // on its animation Spring so that the Spring continues with the\n    // same velocity as the gesture ended with. The friction, tension,\n    // and displacement of the Spring will then govern its motion to\n    // return to rest on a natural feeling curve.\n    setVelocity: function(velocity) {\n      if (velocity === this._currentState.velocity) {\n        return this;\n      }\n      this._currentState.velocity = velocity;\n      this._springSystem.activateSpring(this.getId());\n      return this;\n    },\n\n    // Get the current velocity of the Spring.\n    getVelocity: function() {\n      return this._currentState.velocity;\n    },\n\n    // Set a threshold value for the movement speed of the Spring below\n    // which it will be considered to be not moving or resting.\n    setRestSpeedThreshold: function(restSpeedThreshold) {\n      this._restSpeedThreshold = restSpeedThreshold;\n      return this;\n    },\n\n    // Retrieve the rest speed threshold for this Spring.\n    getRestSpeedThreshold: function() {\n      return this._restSpeedThreshold;\n    },\n\n    // Set a threshold value for displacement below which the Spring\n    // will be considered to be not displaced i.e. at its resting\n    // `endValue`.\n    setRestDisplacementThreshold: function(displacementFromRestThreshold) {\n      this._displacementFromRestThreshold = displacementFromRestThreshold;\n    },\n\n    // Retrieve the rest displacement threshold for this spring.\n    getRestDisplacementThreshold: function() {\n      return this._displacementFromRestThreshold;\n    },\n\n    // Enable overshoot clamping. This means that the Spring will stop\n    // immediately when it reaches its resting position regardless of\n    // any existing momentum it may have. This can be useful for certain\n    // types of animations that should not oscillate such as a scale\n    // down to 0 or alpha fade.\n    setOvershootClampingEnabled: function(enabled) {\n      this._overshootClampingEnabled = enabled;\n      return this;\n    },\n\n    // Check if overshoot clamping is enabled for this spring.\n    isOvershootClampingEnabled: function() {\n      return this._overshootClampingEnabled;\n    },\n\n    // Check if the Spring has gone past its end point by comparing\n    // the direction it was moving in when it started to the current\n    // position and end value.\n    isOvershooting: function() {\n      return this._springConfig.tension > 0 &&\n             ((this._startValue < this._endValue && this.getCurrentValue() > this._endValue) ||\n             (this._startValue > this._endValue && this.getCurrentValue() < this._endValue));\n    },\n\n    // Spring.advance is the main solver method for the Spring. It takes\n    // the current time and delta since the last time step and performs\n    // an RK4 integration to get the new position and velocity state\n    // for the Spring based on the tension, friction, velocity, and\n    // displacement of the Spring.\n    advance: function(time, realDeltaTime) {\n      var isAtRest = this.isAtRest();\n\n      if (isAtRest && this._wasAtRest) {\n        return;\n      }\n\n      var adjustedDeltaTime = realDeltaTime;\n      if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n        adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n      }\n\n      this._timeAccumulator += adjustedDeltaTime;\n\n      var tension = this._springConfig.tension,\n          friction = this._springConfig.friction,\n\n          position = this._currentState.position,\n          velocity = this._currentState.velocity,\n          tempPosition = this._tempState.position,\n          tempVelocity = this._tempState.velocity,\n\n          aVelocity, aAcceleration,\n          bVelocity, bAcceleration,\n          cVelocity, cAcceleration,\n          dVelocity, dAcceleration,\n\n          dxdt, dvdt;\n\n      while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n\n        this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n        if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n          this._previousState.position = position;\n          this._previousState.velocity = velocity;\n        }\n\n        aVelocity = velocity;\n        aAcceleration = (tension * (this._endValue - tempPosition)) - friction * velocity;\n\n        tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity = velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        bVelocity = tempVelocity;\n        bAcceleration = (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity = velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        cVelocity = tempVelocity;\n        cAcceleration = (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity = velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        dVelocity = tempVelocity;\n        dAcceleration = (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        dxdt = 1.0/6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n        dvdt = 1.0/6.0 *\n          (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration);\n\n        position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n        velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n      }\n\n      this._tempState.position = tempPosition;\n      this._tempState.velocity = tempVelocity;\n\n      this._currentState.position = position;\n      this._currentState.velocity = velocity;\n\n      if (this._timeAccumulator > 0) {\n        this.interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n      }\n\n      if (this.isAtRest() ||\n          this._overshootClampingEnabled && this.isOvershooting()) {\n\n        if (this._springConfig.tension > 0) {\n          this._startValue = this._endValue;\n          this._currentState.position = this._endValue;\n        } else {\n          this._endValue = this._currentState.position;\n          this._startValue = this._endValue;\n        }\n        this.setVelocity(0);\n        isAtRest = true;\n      }\n\n      var notifyActivate = false;\n      if (this._wasAtRest) {\n        this._wasAtRest = false;\n        notifyActivate = true;\n      }\n\n      var notifyAtRest = false;\n      if (isAtRest) {\n        this._wasAtRest = true;\n        notifyAtRest = true;\n      }\n\n      this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n    },\n\n    notifyPositionUpdated: function(notifyActivate, notifyAtRest) {\n      for (var i = 0, len = this.listeners.length; i < len; i++) {\n        var listener = this.listeners[i];\n        if (notifyActivate && listener.onSpringActivate) {\n          listener.onSpringActivate(this);\n        }\n\n        if (listener.onSpringUpdate) {\n          listener.onSpringUpdate(this);\n        }\n\n        if (notifyAtRest && listener.onSpringAtRest) {\n          listener.onSpringAtRest(this);\n        }\n      }\n    },\n\n\n    // Check if the SpringSystem should advance. Springs are advanced\n    // a final frame after they reach equilibrium to ensure that the\n    // currentValue is exactly the requested endValue regardless of the\n    // displacement threshold.\n    systemShouldAdvance: function() {\n      return !this.isAtRest() || !this.wasAtRest();\n    },\n\n    wasAtRest: function() {\n      return this._wasAtRest;\n    },\n\n    // Check if the Spring is atRest meaning that it’s currentValue and\n    // endValue are the same and that it has no velocity. The previously\n    // described thresholds for speed and displacement define the bounds\n    // of this equivalence check. If the Spring has 0 tension, then it will\n    // be considered at rest whenever its absolute velocity drops below the\n    // restSpeedThreshold.\n    isAtRest: function() {\n      return Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n        (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold ||\n        this._springConfig.tension === 0);\n    },\n\n    // Force the spring to be at rest at its current position. As\n    // described in the documentation for setCurrentValue, this method\n    // makes it easy to do synchronous non-animated updates to ui\n    // elements that are attached to springs via SpringListeners.\n    setAtRest: function() {\n      this._endValue = this._currentState.position;\n      this._tempState.position = this._currentState.position;\n      this._currentState.velocity = 0;\n      return this;\n    },\n\n    interpolate: function(alpha) {\n      this._currentState.position = this._currentState.position *\n        alpha + this._previousState.position * (1 - alpha);\n      this._currentState.velocity = this._currentState.velocity *\n        alpha + this._previousState.velocity * (1 - alpha);\n    },\n\n    getListeners: function() {\n      return this.listeners;\n    },\n\n    addListener: function(newListener) {\n      this.listeners.push(newListener);\n      return this;\n    },\n\n    removeListener: function(listenerToRemove) {\n      removeFirst(this.listeners, listenerToRemove);\n      return this;\n    },\n\n    removeAllListeners: function() {\n      this.listeners = [];\n      return this;\n    },\n\n    currentValueIsApproximately: function(value) {\n      return Math.abs(this.getCurrentValue() - value) <=\n        this.getRestDisplacementThreshold();\n    }\n\n  });\n\n  // PhysicsState\n  // ------------\n  // **PhysicsState** consists of a position and velocity. A Spring uses\n  // this internally to keep track of its current and prior position and\n  // velocity values.\n  var PhysicsState = function PhysicsState() {};\n\n  util.extend(PhysicsState.prototype, {\n    position: 0,\n    velocity: 0\n  });\n\n  // SpringConfig\n  // ------------\n  // **SpringConfig** maintains a set of tension and friction constants\n  // for a Spring. You can use fromOrigamiTensionAndFriction to convert\n  // values from the [Origami](http://facebook.github.io/origami/)\n  // design tool directly to Rebound spring constants.\n  var SpringConfig = rebound.SpringConfig =\n    function SpringConfig(tension, friction) {\n      this.tension = tension;\n      this.friction = friction;\n    };\n\n  // Loopers\n  // -------\n  // **AnimationLooper** plays each frame of the SpringSystem on animation timing loop.\n  // This is the default type of looper for a new spring system as it is the most common\n  // when developing UI.\n  var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {\n    this.springSystem = null;\n    var _this = this;\n    var _run = function() {\n      _this.springSystem.loop(Date.now());\n    };\n\n    this.run = function() {\n      util.onFrame(_run);\n    }\n  };\n\n  // **SimulationLooper** resolves the SpringSystem to a resting state in a\n  // tight and blocking loop. This is useful for synchronously generating pre-recorded\n  // animations that can then be played on a timing loop later. Sometimes this lead to\n  // better performance to pre-record a single spring curve and use it to drive many\n  // animations; however, it can make dynamic response to user input a bit trickier to\n  // implement.\n  var SimulationLooper = rebound.SimulationLooper = function SimulationLooper(timestep) {\n    this.springSystem = null;\n    var time = 0;\n    var running = false;\n    timestep=timestep || 16.667;\n\n    this.run = function() {\n      if (running) {\n        return;\n      }\n      running = true;\n      while(!this.springSystem.getIsIdle()) {\n        this.springSystem.loop(time+=timestep);\n      }\n      running = false;\n    }\n  };\n\n  // **SteppingSimulationLooper** resolves the SpringSystem one step at a time controlled\n  // by an outside loop. This is useful for testing and verifying the behavior of a SpringSystem\n  // or if you want to control your own timing loop for some reason e.g. slowing down or speeding\n  // up the simulation.\n  var SteppingSimulationLooper = rebound.SteppingSimulationLooper = function(timestep) {\n    this.springSystem = null;\n    var time = 0;\n    var running = false;\n\n    // this.run is NOOP'd here to allow control from the outside using this.step.\n    this.run = function(){};\n\n    // Perform one step toward resolving the SpringSystem.\n    this.step = function(timestep) {\n      this.springSystem.loop(time+=timestep);\n    }\n  };\n\n  // Math for converting from\n  // [Origami](http://facebook.github.io/origami/) to\n  // [Rebound](http://facebook.github.io/rebound).\n  // You mostly don't need to worry about this, just use\n  // SpringConfig.fromOrigamiTensionAndFriction(v, v);\n  var OrigamiValueConverter = rebound.OrigamiValueConverter = {\n    tensionFromOrigamiValue: function(oValue) {\n      return (oValue - 30.0) * 3.62 + 194.0;\n    },\n\n    origamiValueFromTension: function(tension) {\n      return (tension - 194.0) / 3.62 + 30.0;\n    },\n\n    frictionFromOrigamiValue: function(oValue) {\n      return (oValue - 8.0) * 3.0 + 25.0;\n    },\n\n    origamiFromFriction: function(friction) {\n      return (friction - 25.0) / 3.0 + 8.0;\n    }\n  };\n\n  util.extend(SpringConfig, {\n    // Convert an origami Spring tension and friction to Rebound spring\n    // constants. If you are prototyping a design with Origami, this\n    // makes it easy to make your springs behave exactly the same in\n    // Rebound.\n    fromOrigamiTensionAndFriction: function(tension, friction) {\n      return new SpringConfig(\n        OrigamiValueConverter.tensionFromOrigamiValue(tension),\n        OrigamiValueConverter.frictionFromOrigamiValue(friction));\n    },\n\n    // Create a SpringConfig with no tension or a coasting spring with some amount\n    // of Friction so that it does not coast infininitely.\n    coastingConfigWithOrigamiFriction: function(friction) {\n      return new SpringConfig(0, OrigamiValueConverter.frictionFromOrigamiValue(friction));\n    }\n  });\n\n  SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG = SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n\n  util.extend(SpringConfig.prototype, {friction: 0, tension: 0});\n\n  // Here are a couple of function to convert colors between hex codes and RGB\n  // component values. These are handy when performing color tweening animations.\n  var colorCache = {};\n  util.hexToRGB = function(color) {\n    if (colorCache[color]) {\n      return colorCache[color];\n    }\n    color = color.replace('#', '');\n    if (color.length === 3) {\n      color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n    }\n    var parts = color.match(/.{2}/g);\n\n    var color = {\n      r: parseInt(parts[0], 16),\n      g: parseInt(parts[1], 16),\n      b: parseInt(parts[2], 16)\n    };\n\n    colorCache[color] = color;\n    return color;\n  };\n\n  util.rgbToHex = function(r, g, b) {\n    r = r.toString(16);\n    g = g.toString(16);\n    b = b.toString(16);\n    r = r.length < 2 ? '0' + r : r;\n    g = g.length < 2 ? '0' + g : g;\n    b = b.length < 2 ? '0' + b : b;\n    return '#' + r + g + b;\n  };\n\n  var MathUtil = rebound.MathUtil = {\n    // This helper function does a linear interpolation of a value from\n    // one range to another. This can be very useful for converting the\n    // motion of a Spring to a range of UI property values. For example a\n    // spring moving from position 0 to 1 could be interpolated to move a\n    // view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n    // position of the `Spring` just needs to be run through this method\n    // taking its input range in the _from_ parameters with the property\n    // animation range in the _to_ parameters.\n    mapValueInRange: function(value, fromLow, fromHigh, toLow, toHigh) {\n      var fromRangeSize = fromHigh - fromLow;\n      var toRangeSize = toHigh - toLow;\n      var valueScale = (value - fromLow) / fromRangeSize;\n      return toLow + (valueScale * toRangeSize);\n    },\n\n    // Interpolate two hex colors in a 0 - 1 range or optionally provide a custom range\n    // with fromLow,fromHight. The output will be in hex by default unless asRGB is true\n    // in which case it will be returned as an rgb string.\n    interpolateColor: function(val, startColor, endColor, fromLow, fromHigh, asRGB) {\n      fromLow = typeof fromLow === 'undefined' ? 0 : fromLow;\n      fromHigh = typeof fromHigh === 'undefined' ? 1 : fromHigh;\n      var startColor = util.hexToRGB(startColor);\n      var endColor = util.hexToRGB(endColor);\n      var r = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r));\n      var g = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g));\n      var b = Math.floor(util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b));\n      if (asRGB) {\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n      } else {\n        return util.rgbToHex(r, g, b);\n      }\n    },\n\n    degreesToRadians: function(deg) {\n      return (deg * Math.PI) / 180;\n    },\n\n    radiansToDegrees: function(rad) {\n      return (rad * 180) / Math.PI;\n    }\n\n  }\n\n  util.extend(util, MathUtil);\n\n\n  // Utilities\n  // ---------\n  // Here are a few useful JavaScript utilities.\n\n  // Lop off the first occurence of the reference in the Array.\n  function removeFirst(array, item) {\n    var idx = array.indexOf(item);\n    idx != -1 && array.splice(idx, 1);\n  }\n\n  var _onFrame;\n  if (typeof window !== 'undefined') {\n    _onFrame = window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.oRequestAnimationFrame;\n  }\n  if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n    _onFrame = setImmediate;\n  }\n\n  // Cross browser/node timer functions.\n  util.onFrame = function onFrame(func) {\n    return _onFrame(func);\n  }\n\n  // Export the public api using exports for common js or the window for\n  // normal browser inclusion.\n  if (typeof exports != 'undefined') {\n    util.extend(exports, rebound);\n  } else if (typeof window != 'undefined') {\n    window.rebound = rebound;\n  }\n})();\n\n// Legal Stuff\n// -----------\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n}).call(this,require('_process'))\n},{\"_process\":2}],5:[function(require,module,exports){\n(function (global){\n/**\n* @link https://github.com/gajus/sister for the canonical source repository\n* @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause\n*/\nfunction Sister () {\n    var sister = {},\n        events = {};\n\n    /**\n     * @name handler\n     * @function\n     * @param {Object} data Event data.\n     */\n\n    /**\n     * @param {String} name Event name.\n     * @param {handler} handler\n     * @return {listener}\n     */\n    sister.on = function (name, handler) {\n        var listener = {name: name, handler: handler};\n        events[name] = events[name] || [];\n        events[name].unshift(listener);\n        return listener;\n    };\n\n    /**\n     * @param {listener}\n     */\n    sister.off = function (listener) {\n        var index = events[listener.name].indexOf(listener);\n\n        if (index != -1) {\n            events[listener.name].splice(index, 1);\n        }\n    };\n\n    /**\n     * @param {String} name Event name.\n     * @param {Object} data Event data.\n     */\n    sister.trigger = function (name, data) {\n        var listeners = events[name],\n            i;\n\n        if (listeners) {\n            i = listeners.length;\n            while (i--) {\n                listeners[i].handler(data);\n            }\n        }\n    };\n\n    return sister;\n}\n\nglobal.gajus = global.gajus || {};\nglobal.gajus.Sister = Sister;\n\nmodule.exports = Sister;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar style = document.createElement('p').style,\n    prefixes = 'O ms Moz webkit'.split(' '),\n    hasPrefix = /^(o|ms|moz|webkit)/,\n    upper = /([A-Z])/g,\n    memo = {};\n\nfunction get(key){\n    return (key in memo) ? memo[key] : memo[key] = prefix(key);\n}\n\nfunction prefix(key){\n    var capitalizedKey = key.replace(/-([a-z])/g, function(s, match){\n            return match.toUpperCase();\n        }),\n        i = prefixes.length,\n        name;\n\n    if (style[capitalizedKey] !== undefined) return capitalizedKey;\n\n    capitalizedKey = capitalize(key);\n\n    while (i--) {\n        name = prefixes[i] + capitalizedKey;\n        if (style[name] !== undefined) return name;\n    }\n\n    throw new Error('unable to prefix ' + key);\n}\n\nfunction capitalize(str){\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction dashedPrefix(key){\n    var prefixedKey = get(key),\n        upper = /([A-Z])/g;\n\n    if (upper.test(prefixedKey)) {\n        prefixedKey = (hasPrefix.test(prefixedKey) ? '-' : '') + prefixedKey.replace(upper, '-$1');\n    }\n\n    return prefixedKey.toLowerCase();\n}\n\nmodule.exports = get;\nmodule.exports.dash = dashedPrefix;\n\n},{}],7:[function(require,module,exports){\n(function (global){\n'use strict';\n\n/* global window, navigator */\n\nvar Card,\n    Sister = require('sister'),\n    Hammer = require('hammerjs'),\n    rebound = require('rebound'),\n    vendorPrefix = require('vendor-prefix'),\n    dom = require('./dom.js'),\n    util = {},\n    _isTouchDevice;\n\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n */\nutil.randomInt = function (min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\n/**\n * @param {Stack} stack\n * @param {HTMLElement} targetElement\n */\nCard = function Card (stack, targetElement) {\n    var card,\n        config,\n        eventEmitter,\n        springSystem,\n        springThrowIn,\n        springThrowOut,\n        lastThrow,\n        lastTranslate,\n        throwOutDistance,\n        onSpringUpdate,\n        throwWhere,\n        mc;\n\n    if (!(this instanceof Card)) {\n        return new Card(stack, targetElement);\n    }\n\n    card = this;\n    config = Card.config(stack.config());\n    eventEmitter = Sister();\n    springSystem = stack.springSystem();\n    springThrowIn = springSystem.createSpring(250, 10);\n    springThrowOut = springSystem.createSpring(500, 20);\n    lastThrow = {};\n    lastTranslate = {x: 0, y: 0};\n\n    springThrowIn.setRestSpeedThreshold(0.05);\n    springThrowIn.setRestDisplacementThreshold(0.05);\n\n    springThrowOut.setRestSpeedThreshold(0.05);\n    springThrowOut.setRestDisplacementThreshold(0.05);\n\n    throwOutDistance = config.throwOutDistance(config.minThrowOutDistance, config.maxThrowOutDistance);\n\n    mc = new Hammer.Manager(targetElement, {\n        recognizers: [\n            [Hammer.Pan, {threshold: 2}]\n        ]\n    });\n\n    Card.appendToParent(targetElement);\n\n    eventEmitter.on('_panstart', function () {\n        Card.appendToParent(targetElement);\n\n        eventEmitter.trigger('dragstart', {\n            target: targetElement\n        });\n    });\n\n    eventEmitter.on('_panmove', function (e) {\n        var x = lastTranslate.x + e.deltaX,\n            y = lastTranslate.y + e.deltaY,\n            r = config.rotation(x, y, targetElement, config.maxRotation);\n\n        config.transform(targetElement, x, y, r);\n\n        eventEmitter.trigger('dragmove', {\n            target: targetElement,\n            throwOutConfidence: config.throwOutConfidence(x, targetElement),\n            throwDirection: x < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT\n        });\n    });\n\n    eventEmitter.on('_panend', function (e) {\n        var x = lastTranslate.x + e.deltaX,\n            y = lastTranslate.y + e.deltaY;\n\n        if (config.isThrowOut(x, targetElement, config.throwOutConfidence(x, targetElement))) {\n            card.throwOut(x, y);\n        } else {\n            card.throwIn(x, y);\n        }\n\n        eventEmitter.trigger('dragend', {\n            target: targetElement\n        });\n    });\n\n    // \"mousedown\" event fires late on touch enabled devices, thus listening\n    // to the touchstart event for touch enabled devices and mousedown otherwise.\n    if (_isTouchDevice()) {\n         targetElement.addEventListener('touchstart', function () {\n                eventEmitter.trigger('_panstart');\n        });\n\n        // Disable scrolling while dragging the element on the touch enabled devices.\n        // @see http://stackoverflow.com/a/12090055/368691\n        (function () {\n            var dragging;\n\n            targetElement.addEventListener('touchstart', function () {\n                dragging = true;\n            });\n\n            targetElement.addEventListener('touchend', function () {\n                dragging = false;\n            });\n\n            global.addEventListener('touchmove', function (e) {\n                if (dragging) {\n                    e.preventDefault();\n                }\n            });\n        }());\n    } else {\n        targetElement.addEventListener('mousedown', function () {\n            eventEmitter.trigger('_panstart');\n        });\n    }\n\n    mc.on('panmove', function (e) {\n        eventEmitter.trigger('_panmove', e);\n    });\n\n    mc.on('panend', function(e) {\n        eventEmitter.trigger('_panend', e);\n    });\n\n    springThrowIn.addListener({\n        onSpringUpdate: function (spring) {\n            var value = spring.getCurrentValue(),\n                x = rebound.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, 0),\n                y = rebound.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, 0);\n\n            onSpringUpdate(x, y);\n        },\n        onSpringAtRest: function () {\n            eventEmitter.trigger('throwinend', {\n                target: targetElement\n            });\n        }\n    });\n\n    springThrowOut.addListener({\n        onSpringUpdate: function (spring) {\n            var value = spring.getCurrentValue(),\n                x = rebound.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, throwOutDistance * lastThrow.direction),\n                y = lastThrow.fromY;\n\n            onSpringUpdate(x, y);\n        },\n        onSpringAtRest: function () {\n            eventEmitter.trigger('throwoutend', {\n                target: targetElement\n            });\n        }\n    });\n\n    /**\n     * Invoked every time the physics solver updates the Spring's value.\n     *\n     * @param {Number} x\n     * @param {Number} y\n     */\n    onSpringUpdate = function (x, y) {\n        var r = config.rotation(x, y, targetElement, config.maxRotation);\n\n        lastTranslate.x = x;\n        lastTranslate.y = y;\n\n        Card.transform(targetElement, x, y, r);\n    };\n\n    /**\n     * Alias\n     */\n    card.on = eventEmitter.on;\n    card._trigger = eventEmitter.trigger;\n\n    /**\n     * Throws a card into the stack from an arbitrary position.\n     *\n     * @param {Number} fromX\n     * @param {Number} fromY\n     */\n    card.throwIn = function (fromX, fromY) {\n        throwWhere(Card.THROW_IN, fromX, fromY);\n    };\n\n    /**\n     * Throws a card out of the stack in the direction away from the original offset.\n     *\n     * @param {Number} fromX\n     * @param {Number} fromY\n     */\n    card.throwOut = function (fromX, fromY) {\n        throwWhere(Card.THROW_OUT, fromX, fromY);\n    };\n\n    /**\n     * Unbinds all Hammer.Manager events.\n     * Removes the listeners from the physics simulation.\n     */\n    card.destroy = function () {\n        mc.destroy();\n        springThrowIn.destroy();\n        springThrowOut.destroy();\n\n        stack._destroyCard(card);\n    };\n\n    /**\n     * @param {Card.THROW_IN|Card.THROW_OUT} where\n     * @param {Number} fromX\n     * @param {Number} fromY\n     */\n    throwWhere = function (where, fromX, fromY) {\n        lastThrow.fromX = fromX;\n        lastThrow.fromY = fromY;\n        lastThrow.direction = lastThrow.fromX < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT;\n\n        if (where === Card.THROW_IN) {\n            springThrowIn.setCurrentValue(0).setAtRest().setEndValue(1);\n\n            eventEmitter.trigger('throwin', {\n                target: targetElement,\n                throwDirection: lastThrow.direction\n            });\n        } else if (where === Card.THROW_OUT) {\n            springThrowOut.setCurrentValue(0).setAtRest().setVelocity(100).setEndValue(1);\n\n            eventEmitter.trigger('throwout', {\n                target: targetElement,\n                throwDirection: lastThrow.direction\n            });\n\n            if (lastThrow.direction === Card.DIRECTION_LEFT) {\n                eventEmitter.trigger('throwoutleft', {\n                    target: targetElement,\n                    throwDirection: lastThrow.direction\n                });\n            } else {\n                eventEmitter.trigger('throwoutright', {\n                    target: targetElement,\n                    throwDirection: lastThrow.direction\n                });\n            }\n        } else {\n            throw new Error('Invalid throw event.');\n        }\n    };\n\n    return card;\n};\n\n/**\n * Interprets stack.config() object. Sets default configuration.\n *\n * @param {Object} config\n * @return {Object}\n */\nCard.config = function (config) {\n    config = config || {};\n\n    config.isThrowOut = config.isThrowOut ? config.isThrowOut : Card.isThrowOut;\n\n    config.throwOutConfidence = config.throwOutConfidence ? config.throwOutConfidence : Card.throwOutConfidence;\n\n    config.throwOutDistance = config.throwOutDistance ? config.throwOutDistance : Card.throwOutDistance;\n    config.minThrowOutDistance = config.minThrowOutDistance ? config.minThrowOutDistance : 400;\n    config.maxThrowOutDistance = config.maxThrowOutDistance ? config.maxThrowOutDistance : 500;\n\n    config.rotation = config.rotation ? config.rotation : Card.rotation;\n    config.maxRotation = config.maxRotation ? config.maxRotation : 20;\n\n    config.transform = config.transform ? config.transform : Card.transform;\n\n    return config;\n};\n\n/**\n * Invoked in the event of `dragmove` and every time the physics solver is triggered.\n * Uses CSS transform to translate element position and rotation.\n *\n * @param {Number} x Horizontal offset from the startDrag.\n * @param {Number} y Vertical offset from the startDrag.\n * @return {null}\n */\nCard.transform = function (element, x, y, r) {\n    element.style[vendorPrefix('transform')] = 'translate3d(0, 0, 0) translate(' + x + 'px, ' + y + 'px) rotate(' + r + 'deg)';\n};\n\n/**\n * If element is not the last among the siblings, append the\n * element to the parentNode. The reason for using this as opposed to zIndex\n * is to allow CSS selector :nth-child, etc.\n *\n * Invoked in the event of mousedown.\n * Invoked when card is added to the stack.\n *\n * @param {HTMLElement} element The target element.\n */\nCard.appendToParent = function (element) {\n    var parent = element.parentNode,\n        siblings = dom.elementChildren(parent),\n        targetIndex = siblings.indexOf(element);\n\n    if (targetIndex + 1 !== siblings.length) {\n        parent.removeChild(element);\n        parent.appendChild(element);\n    }\n};\n\n/**\n * Invoked in the event of dragmove.\n * Returns a value between 0 and 1 indicating the completeness of the throw out condition.\n * Ration of the absolute distance from the original card position and element width.\n *\n * @param {Number} offset Distance from the dragStart.\n * @param {HTMLElement} element Element.\n * @return {Number}\n */\nCard.throwOutConfidence = function (offset, element) {\n    return Math.min(Math.abs(offset) / element.offsetWidth, 1);\n};\n\n/**\n * Invoked in the event of dragend.\n * Determines if element is being thrown out of the stack.\n * Element is considered to be thrown out when throwOutConfidence is equal to 1.\n *\n * @param {Number} offset Distance from the dragStart.\n * @param {HTMLElement} element Element.\n * @param {Number} throwOutConfidence config.throwOutConfidence\n * @return {Boolean}\n */\nCard.isThrowOut = function (offset, element, throwOutConfidence) {\n    return throwOutConfidence === 1;\n};\n\n/**\n * Invoked when card is added to the stack.\n * The card is thrown to this offset from the stack.\n * The value is a random number between minThrowOutDistance and maxThrowOutDistance.\n *\n * @return {Number}\n */\nCard.throwOutDistance = function (minThrowOutDistance, maxThrowOutDistance) {\n    return util.randomInt(minThrowOutDistance, maxThrowOutDistance);\n};\n\n/**\n * Rotation is equal to the proportion of horizontal and vertical offset\n * times the maximumRotation constant.\n *\n * @param {Number} x Horizontal offset from the startDrag.\n * @param {Number} y Vertical offset from the startDrag.\n * @param {HTMLElement} element Element.\n * @param {Number} maxRotation\n * @return {Number} Rotation angle expressed in degrees.\n */\nCard.rotation = function (x, y, element, maxRotation) {\n    var horizontalOffset = Math.min(Math.max(x / element.offsetWidth, -1), 1),\n        verticalOffset = (y > 0 ? 1 : -1) * Math.min(Math.abs(y) / 100, 1),\n        rotation = horizontalOffset * verticalOffset * maxRotation;\n\n    return rotation;\n};\n\n/**\n * @see http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript/4819886#4819886\n */\n_isTouchDevice = function () {\n    return 'ontouchstart' in window || navigator.msMaxTouchPoints;\n};\n\nCard.DIRECTION_LEFT = -1;\nCard.DIRECTION_RIGHT = 1;\n\nCard.THROW_IN = 'in';\nCard.THROW_OUT = 'out';\n\nmodule.exports = Card;\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"./dom.js\":8,\"hammerjs\":3,\"rebound\":4,\"sister\":5,\"vendor-prefix\":6}],8:[function(require,module,exports){\n'use strict';\n\nvar dom = {};\n\n/**\n * Return direct children elements.\n *\n * @see http://stackoverflow.com/a/27102446/368691\n * @param {HTMLElement}\n * @return {Array}\n */\ndom.elementChildren = function (element) {\n    var childNodes = element.childNodes,\n        children = [],\n        i = childNodes.length;\n\n    while (i--) {\n        if (childNodes[i].nodeType === 1) {\n            children.unshift(childNodes[i]);\n        }\n    }\n\n    return children;\n};\n\nmodule.exports = dom;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nvar Stack,\n    Sister = require('sister'),\n    rebound = require('rebound'),\n    Card = require('./card.js');\n\n/**\n * @param {Object} config\n */\nStack = function Stack (config) {\n    var stack,\n        springSystem,\n        eventEmitter,\n        index;\n\n    if (!(this instanceof Stack)) {\n        return new Stack(config);\n    }\n\n    stack = this;\n    springSystem = new rebound.SpringSystem();\n    eventEmitter = Sister();\n    index = [];\n\n    /**\n     * Get the configuration object.\n     *\n     * @return {Object}\n     */\n    stack.config = function () {\n        return config;\n    };\n\n    /**\n     * Get a singleton instance of the SpringSystem physics engine.\n     *\n     * @return {Sister}\n     */\n    stack.springSystem = function () {\n        return springSystem;\n    };\n\n    /**\n     * Proxy to the instance of the event emitter.\n     *\n     * @param {String} eventName\n     * @param {String} listener\n     */\n    stack.on = function (eventName, listener) {\n        eventEmitter.on(eventName, listener);\n    };\n\n    /**\n     * Creates an instance of Card and associates it with the element.\n     *\n     * @return {Card}\n     */\n    stack.createCard = function (element) {\n        var card = Card(this, element),\n            events = [\n                'throwout',\n                'throwoutend',\n                'throwoutleft',\n                'throwoutright',\n                'throwin',\n                'throwinend',\n                'dragstart',\n                'dragmove',\n                'dragend'\n            ];\n\n        // Proxy Card events to the Stack.\n        events.forEach(function (name) {\n            card.on(name, function (data) {\n                eventEmitter.trigger(name, data);\n            });\n        });\n\n        index.push({\n            element: element,\n            card: card\n        });\n\n        return card;\n    };\n\n    /**\n     * Returns card associated with an element.\n     *\n     * @param {HTMLElement} element\n     * @return {Card|null}\n     */\n    stack.getCard = function (element) {\n        var j = index.length;\n        while (j--) {\n            if (index[j].element === element) {\n                return index[j].card;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * @param {Card} card\n     */\n    stack._destroyCard = function (card) {\n        var j = index.length;\n        while (j--) {\n            if (index[j].card === card) {\n                index.splice(j, 1);\n\n                break;\n            }\n        }\n    };\n\n    return stack;\n};\n\nmodule.exports = Stack;\n\n},{\"./card.js\":7,\"rebound\":4,\"sister\":5}]},{},[1]);\n"],"sourceRoot":"/source/"}