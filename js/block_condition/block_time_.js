// Generated by CoffeeScript 1.9.3
var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

this.block_time_ = (function() {
  function block_time_() {
    this.run = bind(this.run, this);
    var $hours, $minutes, $time, css, hours_counter, minutes_counter, morning;
    css = ".arrowUp {\n	position: absolute;\n	width: 10px;\n	top: 10px;\n	left: 10px;\n	font-size: 110%;\n}\n\n.arrowDown {\n	position: absolute;\n	width: 10px;\n	top: 80px;\n	left: 10px;\n	font-size: 110%;\n}\n\ndiv[name='time'] {\n	position: relative;\n	font-family: 'Orbitron', sans-serif;\n	font-size: 140%;\n}\n\n#hoursBlock {\n	position: relative;\n	left: 7px;\n}\n\n#minutesBlock {\n	position: relative;\n	left: 37px;\n}\n\n#timeBlock {\n	position: relative;\n	left: 67px;\n}\n\n#hours, #minutes, #colon, #time {\n	position: absolute;\n	top: 5px;\n}\n\n#hours {\n	left: 4px;\n}\n\n#colon {\n	font-weight: bold;\n	left: 36px;\n}\n\n#minutes {\n	left: 10px;\n}\n\n#time {\n	position: absolute;\n	left: 5px;\n}";
    $('<style type="text/css"></style>').html(css).appendTo("head");
    $("<div class='drag-wrap draggable' name='time'>\n	<div id=\"hoursBlock\">\n		<div id=\"hours\">12</div>\n		<i class=\"arrowUp fa fa-arrow-up\"></i>\n		<i class=\"arrowDown fa fa-arrow-down\"></i>\n	</div>\n	<div id=\"colon\">:</div>\n	<div id=\"minutesBlock\">\n		<div id=\"minutes\">00</div>\n		<i class=\"arrowUp fa fa-arrow-up\"></i>\n		<i class=\"arrowDown fa fa-arrow-down\"></i>\n	</div>\n	<div id=\"timeBlock\">\n		<div id=\"time\">AM</div>\n		<i class=\"arrowUp fa fa-arrow-up\"></i>\n		<i class=\"arrowDown fa fa-arrow-down\"></i>\n	</div>\n</div>").appendTo(".drag-zone");
    $hours = $("#hours");
    $minutes = $("#minutes");
    $time = $("#time");
    hours_counter = 12;
    minutes_counter = 0;
    morning = true;
    interact('.arrowUp').on('tap', function(event) {
      var block, hours_text, minutes_text;
      block = $(event.currentTarget).parent()[0].id.toString();
      switch (block) {
        case "hoursBlock":
          hours_counter++;
          if (hours_counter > 12) {
            hours_counter = 1;
          }
          hours_text = hours_counter.toString();
          if (hours_counter <= 9) {
            hours_text = "0" + hours_counter;
          }
          return $hours.text(hours_text);
        case "minutesBlock":
          minutes_counter++;
          if (minutes_counter > 59) {
            minutes_counter = 0;
          }
          minutes_text = minutes_counter.toString();
          if (minutes_counter <= 9) {
            minutes_text = "0" + minutes_counter;
          }
          return $minutes.text(minutes_text);
        case "timeBlock":
          if (morning) {
            $time.text("PM");
            return morning = false;
          } else {
            $time.text("AM");
            return morning = true;
          }
          break;
        default:
          return console.log("Error. File: block_clock.coffee Function: interact(.arrowUp)");
      }
    });
    interact('.arrowDown').on('tap', function(event) {
      var block, hours_text, minutes_text;
      console.log('tap down');
      block = $(event.currentTarget).parent()[0].id.toString();
      console.log(block);
      switch (block) {
        case "hoursBlock":
          hours_counter--;
          if (hours_counter <= 0) {
            hours_counter = 12;
          }
          hours_text = hours_counter.toString();
          if (hours_counter <= 9) {
            hours_text = "0" + hours_counter;
          }
          return $hours.text(hours_text);
        case "minutesBlock":
          minutes_counter--;
          if (minutes_counter < 0) {
            minutes_counter = 59;
          }
          minutes_text = minutes_counter.toString();
          if (minutes_counter <= 9) {
            minutes_text = "0" + minutes_counter;
          }
          return $minutes.text(minutes_text);
        case "timeBlock":
          if (morning) {
            $time.text("PM");
            return morning = false;
          } else {
            $time.text("AM");
            return morning = true;
          }
          break;
        default:
          return console.log("Error. File: block_clock.coffee Function: interact(.arrowUp)");
      }
    });
  }

  block_time_.prototype.run = function(cb, element) {
    var clock_hours, clock_minutes, clock_time, time_clock, time_now;
    clock_hours = $("#hours").text();
    clock_minutes = $("#minutes").text();
    clock_time = $("#time").text();
    if (clock_time === "PM") {
      clock_hours = parseInt(clock_hours) + 12;
    }
    time_clock = clock_hours + ":" + clock_minutes;
    time_now = moment().format('HH:mm');
    if (time_now === time_clock) {
      return cb(true);
    } else {
      return cb(false);
    }
  };

  return block_time_;

})();
